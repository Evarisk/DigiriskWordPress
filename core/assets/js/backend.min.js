window.eoxiaJS.digirisk = {};

/**
 * Initialise l'objet "core" ainsi que la méthode "init" obligatoire pour la bibliothèque EoxiaJS.
 *
 * @since 6.3.0
 * @version 6.4.0
 */

window.eoxiaJS.digirisk.core = {};

/**
 * La méthode appelée automatiquement par la bibliothèque EoxiaJS.
 *
 * @return {void}
 *
 * @since 6.3.0
 * @version 6.3.0
 */
window.eoxiaJS.digirisk.core.init = function() {
	window.eoxiaJS.digirisk.core.event();
};

/**
 * La méthode contenant tous les évènements pour la core.
 *
 * @since 6.3.0
 * @version 6.4.0
 *
 * @return {void}
 */
window.eoxiaJS.digirisk.core.event = function() {
	jQuery( document ).on( 'click', '.digirisk-wrap .notification.patch-note.active', window.eoxiaJS.digirisk.core.openPopup );
	jQuery( document ).on( 'click', '.digirisk-wrap .notification.patch-note .close', window.eoxiaJS.digirisk.core.closeNotification );
	jQuery( document ).on( 'click', '.popup-update-manager .back-update', window.eoxiaJS.digirisk.core.confirmBack );
};

/**
 * Ajoutes la classe 'active' dans l'élement 'popup.path-note'.
 *
 * @since 6.3.0
 * @version 6.3.0
 *
 * @param  {MouseEvent} event Les attributs de l'évènement.
 * @return {void}
 */
window.eoxiaJS.digirisk.core.openPopup = function( event ) {
	event.stopPropagation();
	jQuery( '.digirisk-wrap .popup.patch-note' ).addClass( 'active' );
};

/**
 * Ajoutes la classe 'active' dans l'élement 'popup.path-note'.
 *
 * @since 6.3.0
 * @version 6.3.0
 *
 * @param  {MouseEvent} event Les attributs de l'évènement.
 * @return {void}
 */
window.eoxiaJS.digirisk.core.closeNotification = function( event ) {
	event.stopPropagation();
	jQuery( this ).closest( '.notification' ).removeClass( 'active' );
};

/**
 * Demande à l'utilsateur la confirmation de revenir en arrière.
 *
 * @since 6.4.0
 * @version 6.4.0
 *
 * @param  {ClickEvent} event Les attributs de l'évènement.
 *
 * @return {void}
 */
window.eoxiaJS.digirisk.core.confirmBack = function( event ) {
	if ( ! confirm( "La mise à jour de vos données est requises. Êtes vous sur de vouloir annuler la mise à jour ?" ) ) {
		event.preventDefault();
		return false;
	}
};

window.eoxiaJS.digirisk.input = {};

window.eoxiaJS.digirisk.input.init = function() {
	window.eoxiaJS.digirisk.input.event();
};

window.eoxiaJS.digirisk.input.event = function() {
  jQuery( document ).on( 'keyup', '.digirisk-wrap .form-element input, .digirisk-wrap .form-element textarea', window.eoxiaJS.digirisk.input.keyUp );
};

window.eoxiaJS.digirisk.input.keyUp = function( event ) {
	if ( 0 < jQuery( this ).val().length ) {
		jQuery( this ).closest( '.form-element' ).addClass( 'active' );
	} else {
		jQuery( this ).closest( '.form-element' ).removeClass( 'active' );
	}
};

/**
 * Initialise l'objet "accident" ainsi que la méthode "init" obligatoire pour la bibliothèque EoxiaJS.
 *
 * @since 6.1.5
 */
window.eoxiaJS.digirisk.accident = {};
window.eoxiaJS.digirisk.accident.canvas = [];

window.eoxiaJS.digirisk.accident.init = function() {
	window.eoxiaJS.digirisk.accident.event();
	window.eoxiaJS.digirisk.accident.refresh();
};

window.eoxiaJS.digirisk.accident.refresh = function() {
	window.eoxiaJS.digirisk.accident.canvas = document.querySelectorAll("canvas");
	for( var i = 0; i < window.eoxiaJS.digirisk.accident.canvas.length; i++ ) {
		window.eoxiaJS.digirisk.accident.canvas[i].signaturePad = new SignaturePad( window.eoxiaJS.digirisk.accident.canvas[i], {
			penColor: "rgb(66, 133, 244)"
		} );
	}

	window.eoxiaJS.digirisk.accident.resizeCanvas();
}

/**
 * Initialise les évènements
 *
 * @since 6.4.0
 *
 * @return {void}
 */
window.eoxiaJS.digirisk.accident.event = function() {
	jQuery( document ).on( 'change', '.flex-table.accident .col.advanced input[type="checkbox"]', window.eoxiaJS.digirisk.accident.changeSelectAccidentInvestigation );
	jQuery( document ).on( 'click', '.flex-table.accident .col.advanced .fa-eraser', window.eoxiaJS.digirisk.accident.clearCanvas );
	jQuery( document ).on( 'keyup', '.flex-table.accident .col.add input, textarea', window.eoxiaJS.digirisk.accident.checkCanAdd );

	window.addEventListener( "resize", window.eoxiaJS.digirisk.accident.resizeCanvas );
};

/**
 * Affiches le champs 'upload' quand la select box est sur 'true'.
 *
 * @since 6.4.0
 *
 * @param  {Event} event L'évènement lors du changement de la select box.
 * @return {void}
 */
window.eoxiaJS.digirisk.accident.changeSelectAccidentInvestigation = function( event ) {
	jQuery( this ).closest( '.investigation-group' ).find( '.investigation-media' ).addClass( 'hidden' );
	if ( jQuery( this ).is( ':checked' ) ) {
		jQuery( this ).closest( '.investigation-group' ).find( '.investigation-media' ).removeClass( 'hidden' );
	}
};

/**
 * Clear le canvas.
 *
 * @since 6.4.0
 *
 * @param  {Event} event L'état de l'évènement à ce moment T.
 * @return {void}
 */
window.eoxiaJS.digirisk.accident.clearCanvas = function( event ) {
	var canvas = jQuery( this ).closest( 'div' ).find( 'canvas' );
	canvas[0].signaturePad.clear();
};


window.eoxiaJS.digirisk.accident.checkCanAdd = function( event ) {
	var accidentRow = jQuery( this ).closest( '.col' );

	if ( accidentRow.find( 'input[name="accident[victim_identity_id]"]' ).val() && accidentRow.find( 'input[name="accident[parent_id]"]' ).val() && accidentRow.find( 'textarea' ).val() ) {
		accidentRow.find( '.action-input' ).removeClass( 'button-disable' );
	} else {
		accidentRow.find( '.action-input' ).addClass( 'button-disable' );
	}
};

/**
 * Quand on "resize" la fenêtre, adapte le canvas.
 *
 * @since 6.4.0
 *
 * @param  {Event} event L'état de l'évènement à ce moment T.
 * @return {void}
 */
window.eoxiaJS.digirisk.accident.resizeCanvas = function( event ) {
	var ratio =  Math.max( window.devicePixelRatio || 1, 1 );

	for( var i = 0; i < window.eoxiaJS.digirisk.accident.canvas.length; i++ ) {
		window.eoxiaJS.digirisk.accident.canvas[i].width = window.eoxiaJS.digirisk.accident.canvas[i].offsetWidth * ratio;
		window.eoxiaJS.digirisk.accident.canvas[i].height = window.eoxiaJS.digirisk.accident.canvas[i].offsetHeight * ratio;
		window.eoxiaJS.digirisk.accident.canvas[i].getContext( "2d" ).scale( ratio, ratio );
		window.eoxiaJS.digirisk.accident.canvas[i].signaturePad.clear();
	}
};

/**
 * Le callback en cas de réussite à la requête Ajax "edit_accident".
 * Remplaces le contenu du tableau par la vue renvoyée par la réponse Ajax.
 *
 * @param  {HTMLDivElement} triggeredElement  L'élement HTML déclenchant la requête Ajax.
 * @param  {Object}         response          Les données renvoyées par la requête Ajax.
 * @return {void}
 *
 * @since 6.1.5
 */
window.eoxiaJS.digirisk.accident.editedAccidentSuccess = function( triggeredElement, response ) {
	if ( response.data.add ) {
		triggeredElement.closest( '.flex-table.accident' ).find( '.table-body' ).prepend( response.data.view );
		jQuery( '.flex-table.accident .col.advanced:first input[type="text"]:first' ).focus();
	} else {
		triggeredElement.closest( '.digirisk-wrap' ).replaceWith( response.data.view );
	}
	window.eoxiaJS.digirisk.accident.refresh();
};

/**
 * Le callback en cas de réussite à la requête Ajax "load_accident".
 * Remplaces le contenu de la ligne du tableau "accident" par le template renvoyé par la requête Ajax.
 *
 * @param  {HTMLDivElement} triggeredElement  L'élement HTML déclenchant la requête Ajax.
 * @param  {Object}         response          Les données renvoyées par la requête Ajax.
 * @return {void}
 *
 * @since 6.1.5
 */
window.eoxiaJS.digirisk.accident.loadedAccidentSuccess = function( triggeredElement, response ) {
	triggeredElement.closest( '.col' ).replaceWith( response.data.view );
	window.eoxiaJS.digirisk.accident.refresh();
	jQuery( '.col.advanced[data-id=' + response.data.id + '] canvas' ).each( function() {
		jQuery( this )[0].signaturePad.clear();
		if ( jQuery( this ).closest( 'div' ).find( '.url' ).val() ) {
			jQuery( this )[0].signaturePad.fromDataURL( jQuery( this ).closest( 'div' ).find( '.url' ).val() );
		}
	} );
};

/**
 * Le callback en cas de réussite à la requête Ajax "delete_accident".
 * Supprimes la ligne du tableau.
 *
 * @param  {HTMLDivElement} triggeredElement  L'élement HTML déclenchant la requête Ajax.
 * @param  {Object}         response          Les données renvoyées par la requête Ajax.
 * @return {void}
 *
 * @since 6.1.5
 */
window.eoxiaJS.digirisk.accident.deletedAccidentSuccess = function( triggeredElement, response ) {
	triggeredElement.closest( '.col' ).fadeOut();
};

/**
 * Le callback en cas de réussite à la requête Ajax "generate_accident".
 * Remplace la vue du tableau
 *
 * @param  {HTMLDivElement} triggeredElement  L'élement HTML déclenchant la requête Ajax.
 * @param  {Object}         response          Les données renvoyées par la requête Ajax.
 * @return {void}
 *
 * @since 6.3.0
 */
window.eoxiaJS.digirisk.accident.generatedAccidentBenin = function( element, response ) {
	jQuery( '.document-accident-benins' ).replaceWith( response.data.view );
};

/**
 * Le callback en cas de réussite à la requête Ajax "generate_registre_accidents_travail_benins".
 * Cliques automatiquement sur l'onglet 'Registre accidents'
 *
 * @param  {HTMLDivElement} triggeredElement  L'élement HTML déclenchant la requête Ajax.
 * @param  {Object}         response          Les données renvoyées par la requête Ajax.
 * @return {void}
 *
 * @since 6.3.0
 */
window.eoxiaJS.digirisk.accident.generatedRegistreATBenin = function( element, response ) {
	jQuery( '.tab-list .tab-element[data-target="digi-registre-accident"]' ).click();
};

/**
 * Le callback en cas de réussite à la requête Ajax "edit_stopping_day".
 *
 * @param  {HTMLDivElement} triggeredElement  L'élement HTML déclenchant la requête Ajax.
 * @param  {Object}         response          Les données renvoyées par la requête Ajax.
 * @return {void}
 *
 * @since 6.4.0
 */
window.eoxiaJS.digirisk.accident.editedStoppingDaySuccess = function( triggeredElement, response ) {
	triggeredElement.closest( 'div' ).html( response.data.view );
};

/**
 * Le callback en cas de réussite à la requête Ajax "delete_stopping_day".
 * Cliques automatiquement sur l'onglet 'Registre accidents'
 *
 * @param  {HTMLDivElement} triggeredElement  L'élement HTML déclenchant la requête Ajax.
 * @param  {Object}         response          Les données renvoyées par la requête Ajax.
 * @return {void}
 *
 * @since 6.4.0
 */

window.eoxiaJS.digirisk.accident.deletedStoppingDay = function( triggeredElement, response ) {
	triggeredElement.closest( '.comment' ).fadeOut();
};

window.eoxiaJS.digirisk.accident.checkStoppingDayData = function( element ) {
	element.closest( '.tooltip.active' ).removeClass( 'active' );

	if ( isNaN( element.closest( '.comment' ).find( '.is-number' ).val() ) || '' == element.closest( '.comment' ).find( '.is-number' ).val() ) {
		element.closest( '.tooltip' ).addClass( 'active' );
		return false;
	}

	return true;
}

window.eoxiaJS.digirisk.accident.checkDataBeforeAdd = function( element ) {
	var accidentRow = element.closest( '.col' );

	accidentRow.find( '.tooltip' ).removeClass( 'active' );

	if ( '' === accidentRow.find( 'input[name="accident[victim_identity_id]"]' ).val() ) {
		accidentRow.find( 'input[name="accident[victim_identity_id]"]' ).closest( '.tooltip' ).addClass( 'active' );
		return false;
	}

	if ( '' === accidentRow.find( 'input[name="accident[parent_id]"]' ).val() ) {
		accidentRow.find( 'input[name="accident[parent_id]"]' ).closest( '.tooltip' ).addClass( 'active' );
		return false;
	}

	if ( '' === accidentRow.find( 'textarea' ).val() ) {
		accidentRow.find( 'textarea' ).closest( '.tooltip' ).addClass( 'active' );
		return false;
	}

	return true;
};

window.eoxiaJS.digirisk.accident.checkAllData = function( element ) {
	var isNumber = true;
	jQuery( '.accident.flex-table .tooltip.active' ).removeClass( 'active' );

	jQuery( '.accident.flex-table .comment:not(.new) .is-number' ).each( function() {
		if ( isNaN( jQuery( this ).val() ) || '' == jQuery( this ).val() ) {
			jQuery( this ).closest( '.tooltip' ).addClass( 'active' );
			isNumber = false;
		}
	} );

	jQuery( '.accident.flex-table .comment.new .is-number' ).each( function() {
		if ( isNaN( jQuery( this ).val() ) ) {
			jQuery( this ).closest( '.tooltip' ).addClass( 'active' );
			isNumber = false;
		}
	} );

	if ( ! isNumber ) {
		return false;
	}

	var id = jQuery( element ).closest( '.col.advanced' ).attr( 'data-id' );
	var accidentRow = jQuery( element ).closest( '.col.advanced[data-id="' + id + '"]' );

	accidentRow.find( 'canvas' ).each( function() {
		if ( ! jQuery( this )[0].signaturePad.isEmpty() ) {
			jQuery( this ).closest( 'div' ).find( 'input:first' ).val( jQuery( this )[0].toDataURL() );
		}
	} );

	return true;
}

/**
 * Initialise l'objet "causerie" ainsi que la méthode "init" obligatoire pour la bibliothèque EoxiaJS.
 *
 * @since   6.6.0
 */
window.eoxiaJS.digirisk.causerie = {};

/**
 * Gestion des signatures.
 *
 * @type {HTMLCanvasElement}
 */
window.eoxiaJS.digirisk.causerie.canvas;

/**
 * Initialise les évènements.
 *
 * @since   6.6.0
 *
 * @return {void}
 */
window.eoxiaJS.digirisk.causerie.init = function() {
	window.eoxiaJS.digirisk.causerie.event();
	window.eoxiaJS.digirisk.causerie.refresh();
};

/**
 * Initialise le canvas, ainsi que owlCarousel.
 *
 * @since   6.6.0
 *
 * @return {void}
 */
window.eoxiaJS.digirisk.causerie.refresh = function() {
	window.eoxiaJS.digirisk.causerie.canvas = document.querySelectorAll("canvas");
	for( var i = 0; i < window.eoxiaJS.digirisk.causerie.canvas.length; i++ ) {
		window.eoxiaJS.digirisk.causerie.canvas[i].signaturePad = new SignaturePad( window.eoxiaJS.digirisk.causerie.canvas[i], {
			penColor: "rgb(66, 133, 244)"
		} );
	}

	jQuery( '.causerie-wrap .owl-carousel' ).owlCarousel( { 'items': 1 } );
};

/**
 * Initialise les évènements principaux des causeries.
 *
 * @since   6.6.0
 *
 * @return {void}
 */
window.eoxiaJS.digirisk.causerie.event = function() {
	// Gestion du titre de la modal.
	jQuery( document ).on( 'change', '.wpeo-autocomplete', window.eoxiaJS.digirisk.causerie.updateModalTitle );

	jQuery( document ).on( 'click', '.modal-signature .button.blue', window.eoxiaJS.digirisk.causerie.saveSignatureURL );

	jQuery( document ).on( 'click', '.causerie-wrap a.disabled', function( event ) {
		event.preventDefault();
		return false;
	} );
};

/**
 * Met à jour le titre de la modal lors du clic sur le bouton pour que l'utilisateur effectue sa signature.
 *
 * @since   6.6.0
 *
 * @param  {MouseEvent} event  Les données du clic.
 * @param  {Object}     data   Contient les données de la requête XHR.
 */
window.eoxiaJS.digirisk.causerie.updateModalTitle = function( event, data ) {
	var title = '';

	if ( data && data.element ) {
		title = 'Signature de l\'utilisateur: ' + data.element.data( 'result' );

		jQuery( this ).closest( 'tr' ).find( '.modal-signature .modal-title' ).text( title );
		jQuery( this ).closest( 'tr' ).find( '.wpeo-modal-event' ).removeClass( 'disabled' );
	}
};

/**
 * Enregistres dans un champ caché
 *
 * @since   6.6.0
 *
 * @param  {MouseEvent} event Les données du clic.
 *
 * @TODO: Mieux définir cette méthode.
 */
window.eoxiaJS.digirisk.causerie.saveSignatureURL = function( event ) {
	event.preventDefault();

	jQuery( '.modal-signature' ).find( 'canvas' ).each( function() {
		if ( ! jQuery( this )[0].signaturePad.isEmpty() ) {
			jQuery( this ).closest( 'div' ).find( 'input:first' ).val( jQuery( this )[0].toDataURL() );
			jQuery( '.step-1 .action-input[data-action="next_step_causerie"]' ).removeClass( 'disabled' );
		}
	} );
};

/**
 * Appliques la signature.
 *
 * @since   6.6.0
 *
 * @param  {[type]} element [description]
 * @return {boolean}         [description]
 *
 * @TODO: Mieux définir cette méthode.
 */
window.eoxiaJS.digirisk.causerie.applySignature = function( element ) {
	if ( ! element.closest( '.wpeo-modal' ).find( 'canvas' )[0].signaturePad.isEmpty() ) {
		element.closest( '.wpeo-modal' ).find( 'input[name="signature_data"]' ).val( element.closest( '.wpeo-modal' ).find( 'canvas' )[0].toDataURL() );
	}

	return true;
};

/**
 * Vérifie que la catégorie de risque soit sélectionné avant d'enregistrer la causerie.
 *
 * @since 6.6.0
 *
 * @param  {HTMLDivElement} triggeredElement L'élément déclenchant l'action.
 *
 * @return {boolean}                         True pour continuer l'action. False pour stopper l'action.
 */
window.eoxiaJS.digirisk.causerie.beforeSaveCauserie = function( triggeredElement ) {
	triggeredElement.closest( '.causerie-row' ).find( '.categorie-container.tooltip' ).removeClass( 'active' );

	// Vérification du danger.
	if ( '-1' === triggeredElement.closest( '.causerie-row' ).find( 'input[name="risk[danger_id]"]' ).val() ) {
		triggeredElement.closest( '.causerie-row' ).find( '.categorie-container.tooltip' ).addClass( 'active' );
		return false;
	}

	return true;
};

/**
 * Le callback en cas de réussite à la requête Ajax "edit_causerie".
 * Remplaces le contenu du tableau par la vue renvoyée par la réponse Ajax.
 *
 * @since   6.6.0
 *
 * @param  {HTMLDivElement} triggeredElement  L'élement HTML déclenchant la requête Ajax.
 * @param  {Object}         response          Les données renvoyées par la requête Ajax.
 * @return {void}
 */
window.eoxiaJS.digirisk.causerie.editedCauserieSuccess = function( triggeredElement, response ) {
	triggeredElement.closest( '.tab-content' ).html( response.data.view );
};

/**
 * Le callback en cas de réussite à la requête Ajax "load_causerie".
 * Remplaces le contenu de la ligne du tableau "causerie" par le template renvoyé par la requête Ajax.
 *
 * @since   6.6.0
 *
 * @param  {HTMLDivElement} triggeredElement  L'élement HTML déclenchant la requête Ajax.
 * @param  {Object}         response          Les données renvoyées par la requête Ajax.
 * @return {void}
 */
window.eoxiaJS.digirisk.causerie.loadedCauserieSuccess = function( element, response ) {
	jQuery( element ).closest( 'tr' ).replaceWith( response.data.view );
};

/**
 * Le callback en cas de réussite à la requête Ajax "delete_causerie".
 * Supprimes la ligne du tableau.
 *
 * @since   6.6.0
 *
 * @param  {HTMLDivElement} triggeredElement  L'élement HTML déclenchant la requête Ajax.
 * @param  {Object}         response          Les données renvoyées par la requête Ajax.
 * @return {void}
 */
window.eoxiaJS.digirisk.causerie.deletedCauserieSuccess = function( element, response ) {
	element.closest( 'tr' ).fadeOut();
};

/**
 * Le callback en cas de réussite à la requête Ajax "save_final_causerie_step_1".
 *
 * @since   6.6.0
 *
 * @param  {HTMLDivElement} triggeredElement  L'élement HTML déclenchant la requête Ajax.
 * @param  {Object}         response          Les données renvoyées par la requête Ajax.
 * @return {void}
 */
window.eoxiaJS.digirisk.causerie.nextStep = function( element, response ) {
	jQuery( '.tab-content' ).html( response.data.view );

	var currentStep = response.data.current_step;
	var percent     = 0;

	if ( 2 === currentStep ) {
		percent = 50;
	} else if ( 3 === currentStep ) {
		percent = 100;
	}

	if ( jQuery( '.main-content' ).hasClass( 'step-1' ) ) {
		jQuery( '.main-content' ).removeClass( 'step-1' ).addClass( 'step-2' );
	} else if ( jQuery( '.main-content' ).hasClass( 'step-2' ) ) {
		jQuery( '.main-content' ).removeClass( 'step-2' ).addClass( 'step-3' );
	}

	jQuery( '.causerie-wrap .bar .loader' ).css( 'width',  percent + '%' );
	jQuery( '.causerie-wrap .bar .loader' ).attr( 'data-width', percent );
	jQuery( '.causerie-wrap .step-list .step[data-width="' + percent + '"]' ).addClass( 'active' );

	window.eoxiaJS.refresh();
};

/**
 * Ajoutes la nouvelle ligne du participant dans le tableau.
 *
 * @since   6.6.0
 *
 * @param  {HTMLDivElement} element  Le bouton déclencahd l'action AJAX.
 * @param  {Object}         response Les données reçu dans le formulaire.
 *
 * @return {void}
 */
window.eoxiaJS.digirisk.causerie.savedParticipant = function( element, response ) {
	jQuery( '.tab-content' ).html( response.data.view );

	window.eoxiaJS.digirisk.causerie.checkParticipantsSignature();

	window.eoxiaJS.refresh();
};

/**
 * Vérifie si toutes les signatures sont présentes dans le tableau.
 * Si toutes les signatures sont présentes, le bouton pour cloturer la causerie est cliquable.
 * Sinon, si une signature est manquante, le bouton est grisé.
 *
 * @since   6.6.0
 *
 * @return {boolean}
 */
window.eoxiaJS.digirisk.causerie.checkParticipantsSignature = function() {
	var allSignature = true

	if ( '.step-3 input[name="signature_data"]'.length ) {
		jQuery( '.step-3 input[name="signature_data"]' ).each( function() {
			if ( ! jQuery( this ).val() ) {
				allSignature = false;
				return false;
			}
		} );
	}

	if ( allSignature ) {
		jQuery( '.step-3 a.disabled' ).removeClass( 'disabled wpeo-tooltip-event' );
	} else {
		jQuery( '.step-3 a.disabled' ).addClass( 'disabled wpeo-tooltip-event' );
	}
};

/**
 * Remplaces le contenu de la ligne déclenchant cette action.
 * Cette action est déclenché lorsqu'un participant signe dans la modal.
 *
 * Cette méthode appelle la méthode "checkParticipantsSignature" afin de vérifier
 * si le bouton "cloturer la causerie" peut être cliquable.
 *
 * @since   6.6.0
 * @version 6.6.0
 *
 * @param  {HTMLDivElement} element  Le bouton déclenchant l'action.
 * @param  {Object}         response La réponse de la requête avec la vue.
 *
 * @return {void}
 */
window.eoxiaJS.digirisk.causerie.savedSignature = function( element, response ) {
	element.closest( 'tr' ).replaceWith( response.data.view );

	window.eoxiaJS.digirisk.causerie.checkParticipantsSignature();

	window.eoxiaJS.digirisk.causerie.refresh();
};

/**
 * Remplaces le contenu de la ligne déclenchant cette action.
 * Cette action est déclenché lorsqu'un participant signe dans la modal.
 *
 * Cette méthode appelle la méthode "checkParticipantsSignature" afin de vérifier
 * si le bouton "cloturer la causerie" peut être cliquable.
 *
 * @since   6.6.0
 * @version 6.6.0
 *
 * @param  {HTMLDivElement} element  Le bouton déclenchant l'action.
 * @param  {Object}         response La réponse de la requête avec la vue.
 *
 * @return {void}
 */
window.eoxiaJS.digirisk.causerie.savedFormerSignature = function( element, response ) {
	element.closest( 'tr' ).find( 'td.signature' ).replaceWith( response.data.view );

	window.eoxiaJS.digirisk.causerie.refresh();
};

/**
 * Vérifie que l'utilisateur et que la signature soit bien présente dans le formulaire.
 *
 * @since   6.6.0
 *
 * @param  {[type]} element [description]
 * @return {void}
 */
window.eoxiaJS.digirisk.causerie.checkAllData = function( element ) {
	jQuery( '.step-1 .former-tooltip' ).removeClass( 'active' );
	jQuery( '.step-1 .signature-tooltip' ).removeClass( 'active' );

	if ( ! jQuery( '.step-1 input[name="former_id"]' ).val() ) {
		jQuery( '.step-1 .former-tooltip' ).addClass( 'active' );

		return false;
	}

	if ( jQuery( '.step-1 input[name="signature_data"]' ).length ) {
		jQuery( '.step-1 .signature-tooltip' ).addClass( 'active' );

		return false;
	}

	return true;
};

/**
 * Vérifie que l'ID de l'utilisateur soit bien présente dans le formulaire.
 *
 * @since   6.6.0
 *
 * @param  {HTMLDivElement} element Le bouton déclenchant cette méthode.
 *
 * @return {boolean}                True si le formateur à été choisi, sinon false pour stopper la requête XHR.
 */
window.eoxiaJS.digirisk.causerie.checkUserID = function( element ) {
	element.closest( 'tr' ).find( '.user-tooltip' ).removeClass( 'active' );

	if ( ! element.closest( 'tr' ).find( 'input[name="participant_id"]' ).val() ) {
		element.closest( 'tr' ).find( '.user-tooltip' ).addClass( 'active' );

		return false;
	}

	return true;
};

"use strict";

var digi_chemical_product = {
	$: undefined,

	init: function( event, $ ) {
		digi_chemical_product.$ = $;
		if ( event || event === undefined ) {
			digi_chemical_product.event();
		}
	},

	event: function() {
		digi_chemical_product.$( document ).on( 'click', '.form-chemical-product .wp-digi-action-new', function( event ) { digi_chemical_product.edit_chemical_product( event, digi_chemical_product.$( this ) ); } );
		digi_chemical_product.$( document ).on( 'click', '.wp-digi-chemical-product .wp-digi-action-delete', function( event ) { digi_chemical_product.delete_chemical_product( event, digi_chemical_product.$( this ) ); } );
		digi_chemical_product.$( document ).on( 'click', '.wp-digi-chemical-product .wp-digi-action-load', function( event ) { digi_chemical_product.load_chemical_product( event, digi_chemical_product.$( this ) ); } );
		// digi_chemical_product.$( document ).on( 'click', '.wp-digi-chemical_product .wp-digi-action-edit', function( event ) { digi_chemical_product.edit_chemical_product( event, digi_chemical_product.$( this ) ); } );
	},

	edit_chemical_product: function( event, element ) {

    digi_chemical_product.$( element ).closest( 'form' ).ajaxSubmit( {
      'beforeSubmit': function() {
				digi_chemical_product.$( '.wp-digi-content' ).addClass( "wp-digi-bloc-loading" );
      },
			success: function( response ) {
				digi_chemical_product.$( '.wp-digi-content' ).removeClass( "wp-digi-bloc-loading" );
				digi_chemical_product.$( '.wp-digi-chemical-product.wp-digi-list' ).replaceWith( response.data.template );
			}
		} );
	},

	delete_chemical_product: function( event, element ) {
		event.preventDefault();

    if( window.confirm( window.digi_confirm_delete ) ) {
  		var chemical_product_id = digi_chemical_product.$( element ).data( 'id' );

  		digi_chemical_product.$( '.wp-digi-content' ).addClass( "wp-digi-bloc-loading" );

  		var data = {
  			action: 'wpdigi-delete-chemical_product',
  			_wpnonce: digi_chemical_product.$( element ).data( 'nonce' ),
  			global: digi_chemical_product.$( element ).data( 'global' ),
  			chemical_product_id: chemical_product_id,
  		};

  		digi_chemical_product.$.post( window.ajaxurl, data, function() {
  			digi_chemical_product.$( '.wp-digi-content' ).removeClass( "wp-digi-bloc-loading" );
  			digi_chemical_product.$( '.wp-digi-list .wp-digi-list-item[data-chemical-product-id="' + chemical_product_id + '"]' ).fadeOut();
  		} );
    }
	},

	load_chemical_product: function( event, element ) {
		event.preventDefault();

    digi_chemical_product.send_chemical_product();

		var chemical_product_id = digi_chemical_product.$( element ).data( 'id' );
		digi_chemical_product.$( '.wp-digi-content' ).addClass( "wp-digi-bloc-loading" );

		var data = {
			action: 'load_chemical_product',
			_wpnonce: digi_chemical_product.$( element ).data( 'nonce' ),
			chemical_product_id: chemical_product_id,
		};

		digi_chemical_product.$.post( window.ajaxurl, data, function( response ) {
      digi_chemical_product.$( '.wp-digi-list-item .dashicons-edit' ).hide();
			digi_chemical_product.$( '.wp-digi-content' ).removeClass( "wp-digi-bloc-loading" );
			digi_chemical_product.$( '.wp-digi-chemical-product .wp-digi-list-item[data-chemical-product-id="' + chemical_product_id + '"]' ).replaceWith( response.data.template );
		} );
	},

	send_chemical_product: function() {
		digi_chemical_product.$( '.wp-digi-table-item-edit' ).each( function() {
			digi_chemical_product.$( this ).find( '.dashicons-edit' ).click();
		} );
	}
};

window.eoxiaJS.digirisk.comment = {};

window.eoxiaJS.digirisk.comment.init = function() {
	window.eoxiaJS.digirisk.comment.event();
};

window.eoxiaJS.digirisk.comment.event = function() {};

window.eoxiaJS.digirisk.comment.delete_success = function( element, response ) {
	jQuery( element ).closest( 'li' ).fadeOut();
};

window.eoxiaJS.digirisk.comment.saved_comment_success = function( element, response ) {
	element.closest( '.comment-container' ).replaceWith( response.data.view );
};

/**
 * Initialise l'objet "correctiveTask" ainsi que la méthode "init" obligatoire pour la bibliothèque EoxiaJS.
 *
 * @since 6.0.0
 * @version 6.4.4
 */

window.eoxiaJS.digirisk.correctiveTask = {};

window.eoxiaJS.digirisk.correctiveTask.init = function() {
	window.eoxiaJS.digirisk.correctiveTask.event();
};

/**
 * Les évènements
 *
 * @since 6.0.0
 * @version 6.4.4
 *
 * @return {void}
 *
 * @todo: En attente de la livraison 1.6.0 de Task Manager pour décommenter le code.
 */
window.eoxiaJS.digirisk.correctiveTask.event = function() {
	// jQuery( document ).on( 'change', '.popup.corrective-task .point[data-id="0"] input[name="content"]', window.eoxiaJS.digirisk.correctiveTask.listenAddSafeExit );
	// jQuery( document ).on( 'addedPointSuccess', '.popup.corrective-task .point[data-id="0"] .action-input', window.eoxiaJS.digirisk.correctiveTask.addedPointSuccess );
};

/**
 * Si le contenu du point à ajouter change, on ajoutes le "safeExit".
 *
 * @since 6.4.4
 * @version 6.4.4
 *
 * @param  {CustomEvent} event Evenement spécial envoyé par TaskManager lors de la modification d'un point.
 *
 * @return {void}
 */
window.eoxiaJS.digirisk.correctiveTask.listenAddSafeExit = function( event ) {
	if ( '' !== jQuery( this ).val() ) {
		jQuery( '.popup.corrective-task' ).addClass( 'no-close' );
		jQuery( '.popup.corrective-task .message' ).removeClass( 'hidden' );
		window.addEventListener( 'beforeunload', window.eoxiaJS.digirisk.correctiveTask.safeExit );
	} else {
		jQuery( '.popup.corrective-task' ).removeClass( 'no-close' );
		jQuery( '.popup.corrective-task .message' ).addClass( 'hidden' );
		window.removeEventListener( 'beforeunload', window.eoxiaJS.digirisk.correctiveTask.safeExit );
	}
};

/**
 * Evenement envoyé par Task Manager lorsqu'un point est ajouté correctement.
 *
 * @since 6.4.4
 * @version 6.4.4
 *
 * @param  {CustomEvent} event Envoyé par Task Manager.
 *
 * @return {void}
 */
window.eoxiaJS.digirisk.correctiveTask.addedPointSuccess = function( event ) {
	jQuery( '.popup.corrective-task' ).removeClass( 'no-close' );
	jQuery( '.popup.corrective-task .message' ).addClass( 'hidden' );
	window.removeEventListener( 'beforeunload', window.eoxiaJS.digirisk.correctiveTask.safeExit );
};

/**
 * Vérification avant la fermeture de la page si toutes les données sont enregistrées.
 *
 * @since 6.4.4
 * @version 6.4.4
 *
 * @param  {WindowEventHandlers} event L'évènement de la fenêtre.
 * @return {string}
 */
window.eoxiaJS.digirisk.correctiveTask.safeExit = function( event ) {
	var confirmationMessage = 'Vos données sont en attentes d\'enregistrement';

	event.returnValue = confirmationMessage;
	return confirmationMessage;
};

/**
 * Le callback en cas de réussite à la requête Ajax "open_task".
 * Remplaces le contenu de la popup "corrective-task" par la vue renvoyée par la réponse Ajax.
 *
 * @since 6.0.0
 * @version 6.4.4
 *
 * @param  {HTMLDivElement} triggeredElement  L'élement HTML déclenchant la requête Ajax.
 * @param  {Object}         response          Les données renvoyées par la requête Ajax.
 *
 * @return {void}
 */
window.eoxiaJS.digirisk.correctiveTask.openedTaskPopup = function( triggeredElement, response ) {
	jQuery( '.popup.corrective-task .content' ).html( response.data.view );
	jQuery( '.popup.corrective-task .container.loading' ).removeClass( 'loading' );
};

/**
 * Initialise l'objet "diffusionInformations" ainsi que la méthode "init" obligatoire pour la bibliothèque EoxiaJS.
 *
 * @since 6.4.0
 */

window.eoxiaJS.digirisk.diffusionInformations = {};

window.eoxiaJS.digirisk.diffusionInformations.init = function() {};

/**
 * Le callback en cas de réussite à la requête Ajax "generate_diffusion_information".
 * Actualises la vue en cliquant sur l'onglet "Informations".
 *
 * @param  {HTMLDivElement} triggeredElement  L'élement HTML déclenchant la requête Ajax.
 * @param  {Object}         response          Les données renvoyées par la requête Ajax.
 * @return {void}
 *
 * @since 6.4.0
 */
window.eoxiaJS.digirisk.diffusionInformations.generatedDiffusionInformationSuccess = function( triggeredElement, response ) {
	jQuery( '.tab-list .tab-element[data-target="digi-diffusion-informations"]' ).click();
};

window.eoxiaJS.digirisk.document = {};

window.eoxiaJS.digirisk.document.init = function() {
	window.eoxiaJS.digirisk.document.event();
};

window.eoxiaJS.digirisk.document.event = function() {
	jQuery( ".wp-digi-societytree-right-container" ).on( "click", "#wpdigi-save-element-sheet", window.eoxiaJS.digirisk.document.save_element_sheet );
	jQuery( ".wp-digi-societytree-right-container" ).on( "click", ".wp-digi-list-document .wp-digi-action-regenerate", window.eoxiaJS.digirisk.document.regenerate_document );
	jQuery( document ).on( 'click', '.wp-digi-doc-pagination a', window.eoxiaJS.digirisk.document.pagination );

};

window.eoxiaJS.digirisk.document.save_element_sheet = function ( event ) {
	event.preventDefault();

	jQuery( this ).addClass( "wp-digi-loading" );


	var options = {
        beforeSubmit:  function( formData, jqForm, options ) {
        },
        success:       function( responseText, statusText, xhr, $form ) {
        	jQuery( this ).removeClass( "wp-digi-loading" );
        	if ( responseText.success ) {
        		if ( undefined !== jQuery( ".wp-digi-global-sheet-content ul.wp-digi-list-document" ).html() ) {
        			jQuery( ".wp-digi-global-sheet-content ul.wp-digi-list-document" ).prepend( responseText.data.output );
        		}
        		else {
        			jQuery( ".wp-digi-global-sheet-tab li.wp-digi-sheet-generation-button" ).click();
        		}
        	}
        	else {

        	}
        },
        dataType: "json",
        resetForm: true,
    };
	jQuery( "#wpdigi-save-element-form" ).ajaxSubmit( options );
};

window.eoxiaJS.digirisk.document.regenerate_document = function ( event ) {
	event.preventDefault();

	var data = {
		action: 'wpdigi_regenerate_document',
		element_id: jQuery( this ).data( 'id' ),
		parent_id: jQuery( this ).data( 'parent-id' ),
		model_name: jQuery( this ).data( 'model'),
		_wpnonce: jQuery( this ).data( 'nonce' ),
	};
	jQuery.post( window.ajaxurl, data, function() {} );
};

window.eoxiaJS.digirisk.document.pagination = function( event ) {
	event.preventDefault();

	var href = jQuery( this ).attr( 'href' ).split( '&' );
	var next_page = href[1].replace('current_page=', '');
	var element_id = href[2].replace('element_id=', '');

	var data = {
		action: 'paginate_document',
		element_id: element_id,
		next_page: next_page
	};

	jQuery.post( window.ajaxurl, data, function( template ) {
		jQuery( '.doc-content' ).replaceWith( template );
	} );
};

/**
 * Initialise l'objet "DUER" ainsi que la méthode "init" obligatoire pour la bibliothèque EoxiaJS.
 *
 * @since   6.2.1
 * @version 7.0.0
 */

window.eoxiaJS.digirisk.DUER = {};

/**
 * Méthode obligatoire pour initialiser l'objet DUER avec EO-Framework.
 *
 * @since 6.2.1
 * @version 6.2.1
 *
 * @return {void}
 */
window.eoxiaJS.digirisk.DUER.init = function() {
	window.eoxiaJS.digirisk.DUER.event();
};

/**
 * Méthode pour initialiser tous les évènements.
 *
 * @since   6.2.1
 * @version 7.0.0
 *
 * @return void
 */
window.eoxiaJS.digirisk.DUER.event = function() {
	jQuery( document ).on( 'modal-opened', '.duer-modal', window.eoxiaJS.digirisk.DUER.modalOpened );
	jQuery( document ).on( 'click', '.duer-modal .button-main', window.eoxiaJS.digirisk.DUER.applyValueToTextarea );

	jQuery( document ).on( 'modal-opened', '.generate-duer-modal', window.eoxiaJS.digirisk.DUER.generateDUERModalOpened );
	jQuery( document ).on( 'click', '.generate-duer-modal .button-main', window.eoxiaJS.digirisk.DUER.closeModalGenerateDUER );
};

/**
 * @todo
 * @param  {[type]} event [description]
 * @param  {[type]} data  [description]
 * @return {[type]}       [description]
 */
window.eoxiaJS.digirisk.DUER.modalOpened = function( event, triggeredElement ) {
	jQuery( this ).find( '.modal-content' ).html( '' );

	if ( 'view' !== jQuery( triggeredElement ).data( 'type' ) ) {
		var textareaContent = jQuery( triggeredElement ).closest( 'tr' ).find( '.textarea-content-' + jQuery( triggeredElement ).data( 'src' ) ).val();
		jQuery( this ).find( '.modal-content' ).html( '<textarea data-to="' + jQuery( triggeredElement ).data( 'src' ) + '" rows="8" style="width: 100%; display: inline-block;"></textarea>' );

		jQuery( '.duer-modal' ).find( 'textarea' ).val( textareaContent );
	} else {
		var content = jQuery( triggeredElement ).closest( 'tr' ).find( '.text-content-' + jQuery( triggeredElement ).data( 'src' ) ).html();
		jQuery( this ).find( '.modal-content' ).html( '<p></p>' );

		jQuery( '.duer-modal' ).find( 'p' ).html( content );
	}
};

/**
 * [description]
 *
 * @since 7.0.0
 *
 * @param  {[type]} triggeredElement [description]
 */
window.eoxiaJS.digirisk.DUER.viewInPopup = function( triggeredElement ) {
	return true;
};

/**
 * @todo
 * @param  {[type]} event [description]
 * @return {[type]}       [description]
 */
window.eoxiaJS.digirisk.DUER.applyValueToTextarea = function( event ) {
	var textarea =  jQuery( '.duer-modal' ).find( 'textarea' );

	jQuery( '.table.duer tfoot .textarea-content-' + textarea.attr( 'data-to' ) ).val( textarea.val() );
};

window.eoxiaJS.digirisk.DUER.generateDUERModalOpened = function( event, triggeredElement ) {
	window.eoxiaJS.digirisk.DUER.generateDUER( jQuery( triggeredElement ), {
		data: {
			index: 1
		}
	} );
}

/**
 * Construit, et génères tous les documents ainsi que le DUER.
 *
 * @since   6.2.1
 * @version 7.0.0
 *
 * @param  {HTMLDivElement} triggeredElement [description]
 * @param  {object} preData          [description]
 * @return {void}                   [description]
 */
window.eoxiaJS.digirisk.DUER.generateDUER = function( triggeredElement, preData ) {
	var data = {};
	var i = 0;
	var key;
	var listInput = window.eoxiaJS.arrayForm.getInput( triggeredElement.closest( 'tr' ) );

	for ( i = 0; i < listInput.length; i++ ) {
		if ( listInput[i].name ) {
			data[listInput[i].name] = window.eoxiaJS.arrayForm.getInputValue( listInput[i] );
		}
	}

	for ( key in preData.data ) {
		data[key] = preData.data[key];
	}

	jQuery( '.generate-duer-modal li:nth-child(' + ( preData.data.index ) + ')' ).get_data( function( attributeData ) {
		for( key in attributeData ) {
			data[key] = attributeData[key];
		}

		window.eoxiaJS.request.send( triggeredElement, data );
	} );
};

/**
 * Le callback en cas de réussite à la requête Ajax "generate_DUER".
 * Coches le LI correspondant à index et regénères un DUER.
 * Si la réponse contient "end", stop la génération du DUER, et rend le bouton cliquable.
 *
 * @param  {HTMLDivElement} triggeredElement  L'élement HTML déclenchant la requête Ajax.
 * @param  {Object}         response          Les données renvoyées par la requête Ajax.
 * @return {void}
 *
 * @since   6.2.1
 * @version 6.5.0
 */
window.eoxiaJS.digirisk.DUER.generatedDUERSuccess = function( element, response ) {
	jQuery( '.generate-duer-modal li:nth-child(' + ( response.data.index ) + ')' ).find( 'img' ).remove();
	jQuery( '.generate-duer-modal li:nth-child(' + ( response.data.index ) + ')' ).append( '<span class="dashicons dashicons-yes"></span>' );

	if ( ! response.data.end ) {
		response.data.index++;
		window.eoxiaJS.digirisk.DUER.generateDUER( element, response );
	} else {
		jQuery( '.generate-duer-modal' ).removeClass( 'no-close modal-force-display' );
	}
};

/**
 * @todo
 * @return {[type]} [description]
 */
window.eoxiaJS.digirisk.DUER.callback_generate_duer_error = function() {};

/**
 * Lors de la fermeture de la popup qui génère le DUER.
 *
 * @since   6.2.1
 * @version 6.5.0
 *
 * @param  {HTMLSpanElement} element L'élément déclencheur de l'action.
 * @param  {ClickEvent} event        L'état de la souris
 * @return {void}
 */
window.eoxiaJS.digirisk.DUER.closeModalGenerateDUER = function( element, event ) {
	if ( jQuery( '.digirisk-wrap .tab-element[data-target="digi-list-duer"]' ) ) {
		jQuery( '.digirisk-wrap .tab-element[data-target="digi-list-duer"]' ).click();
	}
};

/**
 * Initialise l'objet "evaluationMethod" ainsi que la méthode "init" obligatoire pour la bibliothèque EoxiaJS.
 *
 * @since 7.0.0
 * @version 7.0.0
 */
window.eoxiaJS.digirisk.evaluationMethod = {};

window.eoxiaJS.digirisk.evaluationMethod.init = function() {
	window.eoxiaJS.digirisk.evaluationMethod.event();
};

window.eoxiaJS.digirisk.evaluationMethod.event = function() {};

window.eoxiaJS.digirisk.evaluationMethod.updateInputVariables = function( riskID, evaluationID, variableID, value, field ) {
	var updateEvaluationID = false;

	if ( ! field ) {
		updateEvaluationID = true;
		field = jQuery( '.risk-row.edit[data-id="' + riskID + '"] textarea[name="evaluation_variables"]' );
	}

	var currentVal = JSON.parse(field.val());

	currentVal[variableID] = value;

	field.val( JSON.stringify( currentVal ) );

	if ( updateEvaluationID ) {
		jQuery( '.risk-row.edit[data-id="' + riskID + '"] input[name="evaluation_method_id"]' ).val( evaluationID );
	}

	// Rend le bouton "active".
	if ( '-1' !== jQuery( '.risk-row.edit[data-id="' + riskID + '"]' ).find( 'input[name="risk_category_id"]' ).val() ) {
		jQuery( '.risk-row.edit[data-id="' + riskID + '"]' ).find( '.action .wpeo-button.button-disable' ).removeClass( 'button-disable' );
	}
};

/**
 * Initialise l'objet "evaluationMethodDropdown" ainsi que la méthode "init" obligatoire pour la bibliothèque EoxiaJS.
 *
 * @since 6.0.0
 * @version 6.5.0
 */
window.eoxiaJS.digirisk.evaluationMethodDropdown = {};

window.eoxiaJS.digirisk.evaluationMethodDropdown.init = function() {
	window.eoxiaJS.digirisk.evaluationMethodDropdown.event();
};

window.eoxiaJS.digirisk.evaluationMethodDropdown.event = function() {
	jQuery( document ).on( 'click', '.table.risk .dropdown-list li.dropdown-item:not(.open-popup)', window.eoxiaJS.digirisk.evaluationMethodDropdown.selectSeuil );
};

/**
 * Clique sur une des cotations simples.
 *
 * @param  {ClickEvent} event L'état du clic.
 * @return {void}
 *
 * @since 6.0.0
 * @version 7.0.0
 */
window.eoxiaJS.digirisk.evaluationMethodDropdown.selectSeuil = function( event ) {
	var element      = jQuery( this );
	var riskID       = element.data( 'id' );
	var seuil        = element.data( 'seuil' );
	var variableID   = element.data( 'variable-id' );
	var evaluationID = element.data( 'evaluation-id' );

	jQuery( '.risk-row.edit[data-id="' + riskID + '"] .cotation-container .dropdown-toggle.cotation span' ).text( jQuery( this ).text() );
	jQuery( '.risk-row.edit[data-id="' + riskID + '"] .cotation-container .dropdown-toggle.cotation' ).attr( 'data-scale', seuil );


	if ( variableID && evaluationID && seuil ) {
		window.eoxiaJS.digirisk.evaluationMethod.updateInputVariables( riskID, evaluationID, variableID, seuil );
	}
};

/**
 * Initialise l'objet "evaluationMethodEvarisk" ainsi que la méthode "init" obligatoire pour la bibliothèque EoxiaJS.
 *
 * @since 1.0
 * @version 6.2.6.0
 */
window.eoxiaJS.digirisk.evaluationMethodEvarisk = {};

window.eoxiaJS.digirisk.evaluationMethodEvarisk.init = function() {
	window.eoxiaJS.digirisk.evaluationMethodEvarisk.event();
};

window.eoxiaJS.digirisk.evaluationMethodEvarisk.event = function() {
	jQuery( document ).on( 'click', '.wpeo-modal.evaluation-method .wpeo-table.evaluation-method .table-cell.can-select', window.eoxiaJS.digirisk.evaluationMethodEvarisk.selectSeuil );
	jQuery( document ).on( 'click', '.wpeo-modal.evaluation-method .wpeo-button.button-main', window.eoxiaJS.digirisk.evaluationMethodEvarisk.save );
	jQuery( document ).on( 'click', '.wpeo-modal.evaluation-method .wpeo-button.button-secondary', window.eoxiaJS.digirisk.evaluationMethodEvarisk.close_modal );
};

window.eoxiaJS.digirisk.evaluationMethodEvarisk.selectSeuil = function( event ) {
	jQuery( this ).closest( '.table-row' ).find( '.active' ).removeClass( 'active' );
	jQuery( this ).addClass( 'active' );

	var element      = jQuery( this );
	var riskID       = element.data( 'id' );
	var seuil        = element.data( 'seuil' );
	var variableID   = element.data( 'variable-id' );
	var evaluationID = element.data( 'evaluation-id' );

	window.eoxiaJS.digirisk.evaluationMethod.updateInputVariables( riskID, evaluationID, variableID, seuil, jQuery( '.wpeo-modal.modal-active.modal-risk-' + riskID + ' textarea' ) );

	var data = {
		action: 'get_scale',
		method_evaluation_id: evaluationID,
		variables: jQuery( '.wpeo-modal.modal-risk-' + riskID + ' textarea' ).val()
	};

	var currentVal    = JSON.parse(jQuery( '.wpeo-modal.modal-risk-' + riskID + ' textarea' ).val());
	var canGetDetails = true;
	for (var key in currentVal) {
		if (currentVal[key] == '') {
			canGetDetails = false;
		}
	}

	console.log(jQuery( '.wpeo-modal.modal-active.modal-risk-' + riskID + ' .table-cell.active' ).length );

	if ( jQuery( '.wpeo-modal.modal-active.modal-risk-' + riskID + ' .table-cell.active' ).length == 5 ) {
		if ( jQuery( '.wpeo-modal.modal-active.modal-risk-' + riskID + ' .button-main' ).length ) {
			window.eoxiaJS.loader.display( jQuery( '.wpeo-modal.modal-active.modal-risk-' + riskID + ' .button-main' ) );
			jQuery( '.wpeo-modal.modal-active.modal-risk-' + riskID + ' .button-main' ).addClass( 'disabled' );
		}
		jQuery.post( window.ajaxurl, data, function( response ) {
			if ( response.data.details ) {
				if ( jQuery( '.wpeo-modal.modal-active.modal-risk-' + riskID + ' .button-main' ).length ) {
					window.eoxiaJS.loader.remove( jQuery( '.wpeo-modal.modal-active.modal-risk-' + riskID + ' .button-main' ) );
					jQuery( '.wpeo-modal.modal-active.modal-risk-' + riskID + ' .button-main' ).removeClass( 'disabled' );
				}
				jQuery( '.wpeo-modal.modal-active.modal-risk-' + riskID + ' .cotation' ).attr( 'data-scale', response.data.details.scale );
				jQuery( '.wpeo-modal.modal-active.modal-risk-' + riskID + ' .cotation span' ).text( response.data.details.equivalence );
				jQuery( '.wpeo-modal.modal-active.modal-risk-' + riskID + ' .wpeo-button.button-disable' ).removeClass( 'button-disable' ).addClass( 'button-main' );
			}
		} );
	}
};


window.eoxiaJS.digirisk.evaluationMethodEvarisk.save = function( event ) {
	var riskID       = jQuery( this ).data( 'id' );
	var evaluationID = jQuery( '.wpeo-modal.modal-active.modal-risk-' + riskID + ' .digi-method-evaluation-id' ).val();
	var value        = jQuery( '.wpeo-modal.modal-active.modal-risk-' + riskID + ' textarea' ).val();

	jQuery( '.risk-row.edit[data-id="' + riskID + '"] textarea[name="evaluation_variables"]' ).val( value );
	jQuery( '.risk-row.edit[data-id="' + riskID + '"] input[name="evaluation_method_id"]' ).val( evaluationID );

	// On met à jour l'affichage de la cotation.
	jQuery( '.risk-row.edit[data-id="' + riskID + '"] .cotation:first' ).attr( 'data-scale', jQuery( '.wpeo-modal.modal-risk-' + riskID + ' .cotation' ).attr( 'data-scale' ) );
	jQuery( '.risk-row.edit[data-id="' + riskID + '"] .cotation:first span' ).text( jQuery( '.wpeo-modal.modal-risk-' + riskID + ' .cotation span' ).text() );

	window.eoxiaJS.digirisk.evaluationMethodEvarisk.close_modal( undefined, riskID );
};

window.eoxiaJS.digirisk.evaluationMethodEvarisk.close_modal = function( event, riskID ) {
	if ( ! riskID ) {
		riskID = jQuery( this ).data( 'id' );
	}

	jQuery( '.wpeo-modal.modal-active .modal-close' ).click();
};

window.eoxiaJS.digirisk.evaluationMethodEvarisk.fillVariables = function( element ) {
	element.attr( 'data-variables', element.closest( 'td' ).find( 'textarea[name="evaluation_variables"]' ).val() );
}

/**
 * Initialise l'objet "evaluator" ainsi que la méthode "init" obligatoire pour la bibliothèque EoxiaJS.
 *
 * @since 6.0.0
 * @version 6.3.1
 */

window.eoxiaJS.digirisk.evaluator = {};

window.eoxiaJS.digirisk.evaluator.init = function() {
	window.eoxiaJS.digirisk.evaluator.event();
};

window.eoxiaJS.digirisk.evaluator.event = function() {
	jQuery( document ).on( 'click', '.digirisk-wrap table.evaluators input[type="checkbox"]', window.eoxiaJS.digirisk.evaluator.setTime );
	jQuery( document ).on( 'click', '.form-edit-evaluator-assign .wp-digi-pagination a', window.eoxiaJS.digirisk.evaluator.pagination );
};

/**
* Après le changement d'onglet
*
* @since 6.3.1
* @version 6.3.1
*/
window.eoxiaJS.digirisk.evaluator.tabChanged = function() {
	// window.eoxiaJS.digirisk.search.renderChanged();
};

/**
 * Lorsque que l'utilisateur coche la checkbox "affecter", la valeur dans le champ de texte du header du tableau est remplis dans le champs à gauche de la checkbox.
 *
 * @param {MouseEvent} event Le clique de la souris.
 *
 * @since 6.0.0
 * @version 6.3.1
 */
window.eoxiaJS.digirisk.evaluator.setTime = function( event ) {
	var element = jQuery( this );
	if ( element.is( ':checked' ) ) {
		element.closest( 'tr' ).find( 'input.affect' ).val( jQuery( '.table.evaluators input[type="text"]' ).val() );
	} else {
		element.closest( 'tr' ).find( 'input.affect' ).val( '' );
	}
};

/**
 * Le callback en cas de réussite à la requête Ajax "edit_evaluator_assign".
 * Remplaces le contenu du tableau "affected-evaluator" par le template renvoyé par la requête Ajax.
 *
 * @param  {HTMLDivElement} triggeredElement  L'élement HTML déclenchant la requête Ajax.
 * @param  {Object}         response          Les données renvoyées par la requête Ajax.
 * @return {void}
 *
 * @since 6.0.0
 * @version 6.4.0
 */
window.eoxiaJS.digirisk.evaluator.callback_edit_evaluator_assign_success = function( triggeredElement, response ) {
	jQuery( 'table.affected-evaluator' ).replaceWith( response.data.template );
	window.eoxiaJS.digirisk.search.renderChanged();

	jQuery( '.form-edit-evaluator-assign input[type="checkbox"]' ).attr( 'checked', false );
	jQuery( '.form-edit-evaluator-assign .affect:not(:first)' ).val( '' );
};

/**
 * Le callback en cas de réussite à la requête Ajax "detach_evaluator".
 * Remplaces le contenu du tableau "affected-evaluator" par le template renvoyé par la requête Ajax.
 *
 * @param  {HTMLAnchorElement} triggeredElement  L'élement HTML déclenchant la requête Ajax.
 * @param  {Object}            response          Les données renvoyées par la requête Ajax.
 * @return {void}
 *
 * @since 6.0.0
 * @version 6.2.4
 */
window.eoxiaJS.digirisk.evaluator.callback_detach_evaluator_success = function( triggeredElement, response ) {
	jQuery( 'table.affected-evaluator' ).replaceWith( response.data.template );
	window.eoxiaJS.digirisk.search.renderChanged();
};

/**
 * Gestion de la pagination des évalateurs.
 *
 * @param  {ClickEvent} event [description]
 * @return {void}
 *
 * @since 6.0.0
 * @version 6.2.5
 */
window.eoxiaJS.digirisk.evaluator.pagination = function( event ) {
	var href = jQuery( this ).attr( 'href' ).split( '&' );
	var nextPage = href[1].replace( 'current_page=', '' );
	var elementId = href[2].replace( 'element_id=', '' );

	window.eoxiaJS.loader.display( jQuery( '.tab-content .form-edit-evaluator-assign' ) );

	var data = {
		action: 'paginate_evaluator',
		element_id: elementId,
		next_page: nextPage
	};

	event.preventDefault();

	jQuery.post( window.ajaxurl, data, function( view ) {
		jQuery( '.tab-content .wpeo-gridlayout' ).replaceWith( view );
		window.eoxiaJS.digirisk.search.renderChanged();
	} );
};

/**
 * Gères l'export en CSV
 *
 * @author Jimmy Latour <jimmy@evarisk.com>
 *
 * @since 6.2.6.0
 * @version 6.2.6.0
 *
 * @memberof export
 */

/**
 * Initialise l'objet exportCSV dans l'objet digirisk
 * @memberof export
 * @type {Object}
 */
window.eoxiaJS.digirisk.exportCSV = {};

/**
 * La méthode init est appelé automatiquement
 *
 * @since 6.1.5.5
 * @version 6.2.1.2
 *
 * @memberof exportCSV
 *
 * @return {void}
 */
window.eoxiaJS.digirisk.exportCSV.init = function() {
	window.eoxiaJS.digirisk.exportCSV.event();
};

/**
 * Initialies les évènements submit et change
 *
 * @since 6.2.6.0
 * @version 6.2.6.0
 *
 * @memberof exportCSV
 *
 * @return {void}
 */
window.eoxiaJS.digirisk.exportCSV.event = function() {
	jQuery( document ).on( 'click', '#digi-export-csv-form button.blue', window.eoxiaJS.digirisk.exportCSV.makeExport );
};

/**
 * Utilises ajaxSubmit pour envoyer le formulaire en AJAX.
 *
 * @param  {ClickEvent} event L'évènement du clic.
 * @return {void}
 *
 * @since 6.2.6.0
 * @version 6.2.6.0
 */
window.eoxiaJS.digirisk.exportCSV.makeExport = function( event ) {
	var button = jQuery( this );
	event.preventDefault();
	jQuery( this ).closest( 'form' ).ajaxSubmit( {
		'beforeSubmit': function() {
			window.eoxiaJS.loader.display( button );
		},
		success: function( response ) {
			button.closest( 'form' ).find( 'progress' ).attr( 'max', response.data.number_risks );
			button.closest( 'form' ).find( 'progress' ).val( ( response.data.offset / response.data.number_risks ) * response.data.number_risks );
			if ( response.data.end ) {
				window.eoxiaJS.loader.remove( button );
				window.eoxiaJS.global.downloadFile( response.data.url_to_file, response.data.filename );
				jQuery( '#digi-export-csv-form input[name="offset"]' ).val( 0 );
				jQuery( '#digi-export-csv-form input[name="filepath"]' ).val( '' );
				jQuery( '#digi-export-csv-form input[name="filename"]' ).val( '' );
				jQuery( '#digi-export-csv-form input[name="number_risks"]' ).val( 0 );
				jQuery( '#digi-export-csv-form input[name="url_to_file"]' ).val( '' );
			} else {
				jQuery( '#digi-export-csv-form input[name="offset"]' ).val( response.data.offset );
				jQuery( '#digi-export-csv-form input[name="filepath"]' ).val( response.data.filepath );
				jQuery( '#digi-export-csv-form input[name="filename"]' ).val( response.data.filename );
				jQuery( '#digi-export-csv-form input[name="number_risks"]' ).val( response.data.number_risks );
				jQuery( '#digi-export-csv-form input[name="url_to_file"]' ).val( response.data.url_to_file );

				jQuery( '#digi-export-csv-form button.blue' ).click();
			}
		}
	} );
};

/**
 * Gères l'export et l'import des modèles de donnée de DigiRisk
 *
 * @author Evarisk <dev@evarisk.com>
 *
 * @since 6.1.5.5
 *
 * @memberof export
 */

/**
 * Initialise l'objet export dans l'objet digirisk
 * @memberof export
 * @type {Object}
 */
window.eoxiaJS.digirisk.export = {};

/**
 * La méthode init est appelé automatiquement
 *
 * @since 6.1.5.5
 *
 * @memberof export
 *
 * @return {void}
 */
window.eoxiaJS.digirisk.export.init = function() {
	window.eoxiaJS.digirisk.export.event();
};

/**
 * Initialies les évènements submit et change
 *
 * @since 6.1.5.5
 *
 * @memberof export
 *
 * @return {void}
 */
window.eoxiaJS.digirisk.export.event = function() {
	jQuery( document ).on( 'submit', '#digi-data-export #digi-export-form', window.eoxiaJS.digirisk.export.create_export );
	jQuery( document ).on( 'change', '#digi-data-export #digi-import-form input[type="file"]', window.eoxiaJS.digirisk.export.make_import );
};

/**
 * Lances la requête XHR pour créer le fichier .zip de l'export du modèle de donnée.
 *
 * @since 6.1.5.5
 *
 * @param  {Object} event [description]
 * @return {void}
 */
window.eoxiaJS.digirisk.export.create_export = function( event ) {
	var form = jQuery( this );
	event.preventDefault();
	jQuery( this ).closest( 'form' ).ajaxSubmit( {
		'beforeSubmit': function() {
			window.eoxiaJS.loader.display( form.find( 'button' ) );
		},
		success: function( response ) {
			window.eoxiaJS.loader.remove( form.find( 'button' ) );
			window.eoxiaJS.global.downloadFile( response.data.url_to_file, response.data.filename );
		}
	} );
},

/**
 * Prépare la première requête pour importer un modèle de donnée.
 *
 * @since 6.1.5.5
 *
 * @param  {[type]} event [description]
 * @return {void}
 */
window.eoxiaJS.digirisk.export.make_import = function( event ) {
	var data = new FormData();

	event.preventDefault();

	data.append( 'file', jQuery( this )[0].files[0] );
	data.append( 'action', 'digi_import_data' );
	data.append( '_wpnonce', jQuery( this ).closest( 'form' ).find( 'input[name="_wpnonce"]' ).val() );
	data.append( 'index_element', 0 );

	window.eoxiaJS.digirisk.export.request_import( data );
},

/**
 * Lances la requête pour importer un modèle de donnée.
 * Modifie la barre de progression.
 *
 * @since 6.1.5.5
 *
 * @param  {object} data Les données pour la requête
 * @return {void}
 */
window.eoxiaJS.digirisk.export.request_import = function( data ) {
	jQuery.ajax( {
		url: ajaxurl,
		data: data,
		processData: false,
		contentType: false,
		type: 'POST',
		beforeSend: function() {
			window.eoxiaJS.loader.display(  jQuery( '#digi-import-form .button.blue' ) );
			jQuery( '.digi-import-detail' ).html( window.digi_tools_in_progress );
		},
		success: function( response ) {
			var data = new FormData();

			if ( response.success ) {
				jQuery( '#digi-import-form progress' ).attr( 'max', response.data.count_element );
				jQuery( '#digi-import-form progress' ).val( ( response.data.index_element / response.data.count_element ) * response.data.count_element );

				if ( ! response.data.end ) {
					data.append( 'action', 'digi_import_data' );
					data.append( '_wpnonce', jQuery( '#digi-import-form' ).find( 'input[name="_wpnonce"]' ).val() );
					data.append( 'path_to_json', response.data.path_to_json );
					data.append( 'index_element', response.data.index_element );
					jQuery( '.digi-import-detail' ).html( window.digi_tools_in_progress );
					window.eoxiaJS.digirisk.export.request_import( data );
				} else {
					jQuery( '.digi-import-detail' ).html( window.digi_tools_done );
					if ( jQuery( '#toplevel_page_digi-setup a' ).attr( 'href' ) ) {
						jQuery( '#toplevel_page_digi-setup a' ).attr( 'href', jQuery( '#toplevel_page_digi-setup a' ).attr( 'href' ).replace( 'digi-setup', 'digirisk-simple-risk-evaluation' ) );
					}

					jQuery( '#digi-import-form progress' ).attr( 'max', 100 );
					jQuery( '#digi-import-form progress' ).val( 100 );

					window.eoxiaJS.loader.remove(  jQuery( '#digi-import-form .button.blue' ) );
				}
			} else {
				alert( 'Problème lors de l\'importation du modèle' );
			}
		}
	} );
};

/**
 * Initialise l'objet "group" ainsi que la méthode "init" obligatoire pour la bibliothèque EoxiaJS.
 *
 * @since 1.0
 * @version 6.2.4.0
 */

window.eoxiaJS.digirisk.group = {};

/**
 * La méthode appelée automatiquement par la bibliothèque EoxiaJS.
 *
 * @return {void}
 *
 * @since 1.0
 * @version 6.2.4.0
 */
window.eoxiaJS.digirisk.group.init = function() {};

/**
 * Le callback en cas de réussite à la requête Ajax "create_group".
 * Remplaces le contenu de toute l'application par la vue renvoyé par la requête Ajax.
 * Clic ensuite sur le nouveau groupement pour lancer la requête "load_society".
 *
 * @param  {HTMLDivElement} triggeredElement  L'élement HTML déclenchant la requête Ajax.
 * @param  {Object}         response          Les données renvoyées par la requête Ajax.
 * @return {void}
 *
 * @since 1.0
 * @version 6.2.4.0
 */
window.eoxiaJS.digirisk.group.createdGroupSuccess = function( element, response ) {
	jQuery( '.digirisk-wrap' ).replaceWith( response.data.template );
	jQuery( '.workunit-navigation span.action-attribute[data-groupment-id="' + response.data.groupment_id + '"]' ).click();
};

/**
 * Initialise l'objet "handleModel" ainsi que la méthode "init" obligatoire pour la bibliothèque EoxiaJS.
 *
 * @since 6.0.0
 * @version 6.3.0
 */

window.eoxiaJS.digirisk.handleModel = {};

/**
 * Keep the button in memory.
 *
 * @type {Object}
 */
window.eoxiaJS.digirisk.handleModel.currentButton;

/**
 * Keep the media frame in memory.
 * @type {Object}
 */
window.eoxiaJS.digirisk.handleModel.mediaFrame;

/**
 * Keep the selected media in memory.
 * @type {Object}
 */
window.eoxiaJS.digirisk.handleModel.selectedInfos = {
	JSON: undefined,
	fileID: undefined
};

window.eoxiaJS.digirisk.handleModel.init = function() {
	window.eoxiaJS.digirisk.handleModel.event();
};

/**
 * Les évènements
 *
 * @return {void}
 */
window.eoxiaJS.digirisk.handleModel.event = function() {
	jQuery( document ).on( 'click', '.digi-tools-main-container .upload-model', window.eoxiaJS.digirisk.handleModel.openMediaFrame );
};

/**
 * Open the media frame from WordPress.
 *
 * @return void
 *
 * @since 6.3.0
 * @version 6.3.0
 */
window.eoxiaJS.digirisk.handleModel.openMediaFrame = function() {
	window.eoxiaJS.digirisk.handleModel.currentButton = jQuery( this );
	window.eoxiaJS.digirisk.handleModel.mediaFrame = new window.wp.media.view.MediaFrame.Post({
		library: {
			type: 'application/vnd.oasis.opendocument.text'
		}
	}).open();
	window.eoxiaJS.digirisk.handleModel.mediaFrame.on( 'insert', function() { window.eoxiaJS.digirisk.handleModel.selectedFile(); } );
};

/**
 * Get the media selected and call associateFile.
 *
 * @return void
 *
 * @since 6.3.0
 * @version 6.3.0
 */
window.eoxiaJS.digirisk.handleModel.selectedFile = function() {
	window.eoxiaJS.digirisk.handleModel.mediaFrame.state().get( 'selection' ).map( function( attachment ) {
		window.eoxiaJS.digirisk.handleModel.selectedInfos.JSON = attachment.toJSON();
		window.eoxiaJS.digirisk.handleModel.selectedInfos.id = attachment.id;
	} );
	window.eoxiaJS.digirisk.handleModel.associateFile();
};

/**
 * Make request for associate file
 *
 * @return void
 *
 * @since 6.3.0
 * @version 6.3.0
 */
window.eoxiaJS.digirisk.handleModel.associateFile = function() {
	var data = {
		action: 'set_model',
		type: window.eoxiaJS.digirisk.handleModel.currentButton.data( 'type' ),
		file_id: window.eoxiaJS.digirisk.handleModel.selectedInfos.id
	};

	window.eoxiaJS.loader.display( window.eoxiaJS.digirisk.handleModel.currentButton );

	jQuery.post( window.ajaxurl, data, function( response ) {
		jQuery( '#digi-handle-model' ).html( response.data.view );
	} );
};

/**
 * Après la requête AJAX qui ouvre la popup "Historique des modèles"
 *
 * @param  {HTMLAnchorElement} element  Le lien qui permet d'ouvrir la popup
 * @param  {Object}            response Les données de la réponse de la requête XHR
 * @return {void}
 */
window.eoxiaJS.digirisk.handleModel.loadedPopupHistoric = function( element, response ) {
	element.closest( '.block' ).find( '.popup .title' ).text( response.data.title );
	element.closest( '.block' ).find( '.popup .content' ).html( response.data.view );
	jQuery( '.container.loading' ).removeClass( 'loading' );
};

/**
 * Met à jour le bouton "Télécharger le modèle courant" de response.data.type
 * @param {HTMLAnchorElement} element  Le lien "Télécharger le modèle courant"
 * @param {void}
 */
window.eoxiaJS.digirisk.handleModel.reset_default_model_success = function( element, response ) {
	element.closest( '.block' ).find( 'li:first a' ).attr( 'href', response.data.url );
};

/**
 * Initialise l'objet "historic" ainsi que la méthode "init" obligatoire pour la bibliothèque EoxiaJS.
 *
 * @since 6.3.0
 * @version 6.4.0
 */
window.eoxiaJS.digirisk.historic = {};

window.eoxiaJS.digirisk.historic.init = function() {
	window.eoxiaJS.digirisk.historic.event();
};

window.eoxiaJS.digirisk.historic.event = function() {};

/**
 * Le callback en cas de réussite à la requête Ajax "historic_risk".
 * Remplaces le contenu de la popup "corrective-task" par la vue renvoyée par la réponse Ajax.
 *
 * @param  {HTMLDivElement} triggeredElement  L'élement HTML déclenchant la requête Ajax.
 * @param  {Object}         response          Les données renvoyées par la requête Ajax.
 * @return {void}
 *
 * @since 6.3.0
 * @version 6.4.0
 */
window.eoxiaJS.digirisk.historic.openedHistoricRiskPopup = function( triggeredElement, response ) {
	jQuery( '.popup.historic-risk .content' ).html( response.data.view );
	jQuery( '.popup.historic-risk .container.loading' ).removeClass( 'loading' );
};

/**
 * Initialise l'objet "installer" ainsi que la méthode "init" obligatoire pour la bibliothèque EoxiaJS.
 *
 * @since 6.0.0
 */

window.eoxiaJS.digirisk.installer = {};
window.eoxiaJS.digirisk.installer.progressInterval = undefined;

/**
 * Méthodes obligatoire pour utiliser EO-JS.
 *
 * @since 6.0.0
 */
window.eoxiaJS.digirisk.installer.init = function() {
	window.eoxiaJS.digirisk.installer.event();
	window.eoxiaJS.digirisk.initOwlCarousel();
};

/**
 * Initialise tous les évènements pour la page "digi-setup".
 *
 * @since 6.0.0
 */
window.eoxiaJS.digirisk.installer.event = function() {
	jQuery( document ).on( 'keyup', '.wpdigi-installer input[name="title"]', window.eoxiaJS.digirisk.installer.keyUpGroupmentTitle );
	jQuery( document ).on( 'click', '.wpdigi-installer input[type="checkbox"]', window.eoxiaJS.digirisk.installer.toggleDefaultInstall );

	jQuery( document ).on( 'click', '.wpdigi-installer input[name="title"]', window.eoxiaJS.digirisk.installer.emptyPlaceHolder );
	jQuery( document ).on( 'blur', '.wpdigi-installer input[name="title"]', window.eoxiaJS.digirisk.installer.fillProgressBar );
};

/**
 * Initialise le "owlCarousel" sur l'élement "owl-carousel".
 *
 * @since 6.0.0
 */
window.eoxiaJS.digirisk.initOwlCarousel = function() {
	jQuery( '.owl-carousel' ).owlCarousel( {
		'items': 1,
		'nav': true,
		'navText': [],
		'pagination': true,
		'autoHeight': true,
		'autoplay': true,
		'autoplayTimeout': 25000
	} );
}

/**
 * Évènement lors du "keyup" sur le champ "Nom de ma société".
 *
 * @since 6.0.0
 *
 * @param  {KeyEvent} event L'état du clavier.
 */
window.eoxiaJS.digirisk.installer.keyUpGroupmentTitle = function( event ) {
	if ( 13 === event.keyCode ) {
		jQuery( '.main-content .action-input:first' ).click();
	}

	if ( jQuery( this ).val() != '' ) {
		jQuery( '.wpdigi-installer .bar .loader' ).css( 'width',  '12%' );
		jQuery( '.wpdigi-installer .bar .loader' ).attr( 'data-width', 12 );
	}	else {
		jQuery( '.wpdigi-installer .bar .loader' ).css( 'width',  '0%' );
		jQuery( '.wpdigi-installer .bar .loader' ).attr( 'data-width', 0 );
	}
};

/**
 * Ouvre les détails des données par défaut lorsqu'on "check" la case à coché.
 *
 * @since 7.0.0
 *
 * @param  {MouseEvent} event L'état de la souri lors du clic.
 */
window.eoxiaJS.digirisk.installer.toggleDefaultInstall = function( event ) {
	jQuery( '.wpdigi-installer .bloc-create-society .default-data-details' ).toggleClass( 'hidden' );
};

/**
 * Enlèves le placeholder lors du "clic" sur le champ "Nom de ma société".
 *
 * @since 6.0.0
 *
 * @param  {ClickEvent} event L'état du clique.
 */
window.eoxiaJS.digirisk.installer.emptyPlaceHolder = function( event ) {
	if ( '' === jQuery( this ).val() ) {
		jQuery( this ).closest( '.society-form' ).find( 'label' ).hide();
	}
};

/**
 * Remplie la barre de progression.
 *
 * @since 6.0.0
 *
 * @param  {FocusEvent} event L'état du focus.
 */
window.eoxiaJS.digirisk.installer.fillProgressBar = function( event ) {
	if ( '' === jQuery( this ).val() ) {
		jQuery( this ).closest( '.society-form' ).find( 'label' ).show();
		jQuery( '.wpdigi-installer .bar .loader' ).css( 'width',  '0%' );
		jQuery( '.wpdigi-installer .bar .loader' ).attr( 'data-width', 0 );
	}
};

/**
 * Vérifie que le nom de la société ne soit pas vide.
 *
 * @since 6.0.0
 *
 * @param  {HTMLDivElement} element Le bouton déclenchant la création de la société
 */
window.eoxiaJS.digirisk.installer.beforeCreateSociety = function( element ) {
	if ( '' === element.closest( 'form' ).find( 'input[name="title"]' ).val() ) {
		element.closest( 'form' ).find( 'span.tooltip' ).addClass( 'active' );
		return false;
	}

	element.closest( 'form' ).find( 'span.tooltip.active' ).removeClass( 'active' );

	return true;
};

/**
 * Le callback en cas de réussite à la requête Ajax "save_society".
 * Ferme la div "society". Changes l'étape de "Votre société" en "Composants".
 * Ouvre la div "wpdigi-components".
 * Appel la méthode "requestInstallComponent".
 *
 * @param  {HTMLDivElement} triggeredElement  L'élement HTML déclenchant la requête Ajax.
 * @param  {Object}         response          Les données renvoyées par la requête Ajax.
 * @return {void}
 *
 * @since 6.0.0
 */
window.eoxiaJS.digirisk.installer.savedSociety = function( element, response ) {
	jQuery( '.wpdigi-installer .bloc-create-society' ).hide();
	jQuery( '.wpdigi-installer .wpdigi-components' ).show();
	jQuery( '.wpdigi-installer .start-install' ).hide();
	jQuery( '.wpdigi-installer .end-install' ).show();
	jQuery( '.wpdigi-installer .bar .loader' ).css( 'width',  '30%' );
	jQuery( '.wpdigi-installer .bar .loader' ).attr( 'data-width', 25 );
	jQuery( '.wpdigi-installer .step-list .step[data-width="' + 25 + '"]' ).addClass( 'active' );

	window.eoxiaJS.loader.display( jQuery( '.wpdigi-installer a.end-install' ) );

	window.eoxiaJS.digirisk.installer.requestInstallComponent();
};

/**
 * Envoie une requête pour installer les composants nécessaires à l'utilisation de DigiRisk.
 *
 * @since 6.0.0
 */
window.eoxiaJS.digirisk.installer.requestInstallComponent = function() {
	var _wpnonce = jQuery( '.wpdigi-installer .wpdigi-components .nonce-installer-components' ).val();
	window.eoxiaJS.request.get( undefined, ajaxurl + '?action=installer_components&_wpnonce=' + _wpnonce );
};

/**
 * Le callback en cas de réussite à la requête Ajax "installer_components".
 * Met le li active en statut "finit" et passes au suivant, tout en relancant la requête pour installer le composant suivant.
 * Si tous les li sont en statut "finit" passes à l'étape suivante qui est "Création des utilisateurs"
 *
 * @since 6.0.0
 *
 * @param  {HTMLDivElement} triggeredElement  L'élement HTML déclenchant la requête Ajax.
 * @param  {Object}         response          Les données renvoyées par la requête Ajax.
 */
window.eoxiaJS.digirisk.installer.installedComponentSuccess = function( triggeredElement, response ) {

	// Si l'installation n'est pas terminée, on relance une requête avec les prochains composants à installer.
	if ( ! response.data.core_option.installed ) {
		if ( ! response.data.core_option.recommendation_installed && response.data.core_option.danger_installed ) {
			window.eoxiaJS.digirisk.installer.progressBar( 55 );
		} else if ( response.data.core_option.recommendation_installed ) {
			window.eoxiaJS.digirisk.installer.progressBar( 80 );
		}
		window.eoxiaJS.digirisk.installer.requestInstallComponent();
	} else {
		window.eoxiaJS.digirisk.installer.progressBar( 100 );

		jQuery( '.wpdigi-installer .wpdigi-components .next' ).removeClass( 'button-disable' );
		if ( 0 < jQuery( '#toplevel_page_digi-setup a' ).length ) {
			jQuery( '#toplevel_page_digi-setup a' ).attr( 'href', jQuery( '#toplevel_page_digi-setup a' ).attr( 'href' ).replace( 'digi-setup', 'digirisk-simple-risk-evaluation' ) );
		}

		window.eoxiaJS.loader.remove( jQuery( '.wpdigi-installer a' ) );
	}
};

/**
 * Met à jour la barre de progression.
 *
 * @since 6.0.0
 *
 * @param  {integer} pourcent Le pourcentage courant.
 */
window.eoxiaJS.digirisk.installer.progressBar = function( pourcent ) {
	clearInterval( window.eoxiaJS.digirisk.installer.progressInterval );
	window.eoxiaJS.digirisk.installer.progressInterval = undefined;

	window.eoxiaJS.digirisk.installer.progressInterval = setInterval( function() {
		var currentWidth = jQuery( '.wpdigi-installer .bar .loader' ).attr( 'data-width' );
		currentWidth++;

		jQuery( '.wpdigi-installer .bar .loader' ).css( 'width', currentWidth + '%' );
		jQuery( '.wpdigi-installer .bar .loader' ).attr( 'data-width', currentWidth );

		jQuery( '.wpdigi-installer .step-list .step[data-width="' + currentWidth + '"]' ).addClass( 'active' );

		if ( jQuery( '.wpdigi-installer .bar .loader' ).attr( 'data-width' ) >= pourcent ) {
			clearInterval( window.eoxiaJS.digirisk.installer.progressInterval );
			window.eoxiaJS.digirisk.installer.progressInterval = undefined;

			if ( pourcent === 100 ) {
				jQuery( '.wpdigi-installer .end-install.button-disable' ).removeClass( 'button-disable' );
			}
		}
	}, 100 );
};

/**
 * Initialise l'objet "legalDisplay" ainsi que la méthode "init" obligatoire pour la bibliothèque EoxiaJS.
 *
 * @since 6.0.0
 * @version 6.4.4
 */

window.eoxiaJS.digirisk.legalDisplay = {};

window.eoxiaJS.digirisk.legalDisplay.init = function() {};

/**
 * Le callback en cas de réussite à la requête Ajax "save_legal_display".
 * Actualises la vue en cliquant sur l'onglet "Affichage légal".
 *
 * @param  {HTMLDivElement} triggeredElement  L'élement HTML déclenchant la requête Ajax.
 * @param  {Object}         response          Les données renvoyées par la requête Ajax.
 * @return {void}
 *
 * @since 6.0.0
 */
window.eoxiaJS.digirisk.legalDisplay.generatedSuccess = function( triggeredElement, response ) {
	jQuery( '.table.documents' ).replaceWith( response.data.view );
	window.scrollTo( 0, 0 );
};

/**
 * Initialise l'objet "listingRisk" ainsi que la méthode "init" obligatoire pour la bibliothèque EoxiaJS.
 *
 * @since   6.5.0
 */

window.eoxiaJS.digirisk.listingRisk = {};

/**
 * Méthode obligatoire pour initialiser l'objet listingRisk avec EO-Framework.
 *
 * @since 6.5.0
 */
window.eoxiaJS.digirisk.listingRisk.init = function() {
	window.eoxiaJS.digirisk.listingRisk.event();
};

/**
 * Méthode pour initialiser tous les évènements.
 *
 * @since   6.5.0
 */
window.eoxiaJS.digirisk.listingRisk.event = function() {};

/**
 * Le callback en cas de réussite à la requête Ajax "generate_listing_risk".
 * Cliques sur le bouton "Listing des risques" pour recharger la vue.
 *
 * @param  {HTMLDivElement} triggeredElement  L'élement HTML déclenchant la requête Ajax.
 * @param  {Object}         response          Les données renvoyées par la requête Ajax.
 * @return {void}
 *
 * @since 6.5.0
 */
window.eoxiaJS.digirisk.listingRisk.generatedListingRiskSuccess = function( triggeredElement, response ) {
	jQuery( '.tab-element[data-target="digi-listing-risk"]' ).click();
};

/**
 * Initialise l'objet "navigation" ainsi que la méthode "init" obligatoire pour la bibliothèque EoxiaJS.
 *
 * @since 6.0.0
 * @version 7.0.0
 */

window.eoxiaJS.digirisk.navigation = {};

/**
 * La méthode appelée automatiquement par la bibliothèque EoxiaJS.
 *
 * @return {void}
 *
 * @since 6.0.0
 * @version 6.2.4
 */
window.eoxiaJS.digirisk.navigation.init = function() {
	window.eoxiaJS.digirisk.navigation.event();
};

/**
 * La méthode contenant tous les évènements pour la navigation.
 *
 * @since 6.0.0
 * @version 6.3.0
 *
 * @return {void}
 */
window.eoxiaJS.digirisk.navigation.event = function() {
	jQuery( document ).on( 'click', '.digirisk-wrap .navigation-container .unit-container .toggle-unit', window.eoxiaJS.digirisk.navigation.switchToggle );
	jQuery( document ).on( 'click', '.digirisk-wrap .navigation-container .add-container .wpeo-button, .digirisk-wrap .navigation-container .mobile-add-container .dropdown-item', window.eoxiaJS.digirisk.navigation.displayAddField );
	jQuery( document ).on( 'click', '.digirisk-wrap .navigation-container .toolbar div', window.eoxiaJS.digirisk.navigation.toggleAll );
	jQuery( document ).on( 'click', '.digirisk-wrap .navigation-container .unit.new .placeholder-icon', window.eoxiaJS.digirisk.navigation.focusField );
	jQuery( document ).on( 'keyup', '.digirisk-wrap .navigation-container input[name="title"]', window.eoxiaJS.digirisk.navigation.triggerCreateSociety );

	jQuery( document ).on( 'click', '.digirisk-wrap .mobile-navigation', window.eoxiaJS.digirisk.navigation.openNavigationContainer );
	jQuery( document ).on( 'click', '.digirisk-wrap .navigation-container.active .close-popup', window.eoxiaJS.digirisk.navigation.closeNavigationContainer );
};

/**
 * Gestion du toggle dans la navigation.
 *
 * @since 6.3.0
 * @version 6.3.0
 *
 * @param  {MouseEvent} event Les attributs lors du clic.
 * @return {void}
 */
window.eoxiaJS.digirisk.navigation.switchToggle = function( event ) {
	event.preventDefault();

	jQuery( this ).closest( '.unit' ).toggleClass( 'toggled' );
	jQuery( this ).closest( '.unit' ).find( '.unit.new:first.active ' ).removeClass( 'active' );
};

/**
 * Affiches le champ pour créer un établissement.
 *
 * @since 6.3.0
 * @version 6.3.0
 *
 * @param  {MouseEvent} event Les attributs lors du clic.
 * @return {void}
 */
window.eoxiaJS.digirisk.navigation.displayAddField = function( event ) {
	var closest = jQuery( this ).closest( '.society-header' ).length ? jQuery( this ).closest( '.navigation-container' ) : jQuery( this ).closest( '.unit' );
	event.preventDefault();
	event.stopPropagation();

	// Mobile.
	jQuery( '.mobile-add-container .content.active' ).removeClass( 'active' );

	closest.addClass( 'toggled' );

	if ( 'Group_Class' === jQuery( this ).data( 'type' ) ) {
		closest.find( '.unit.new:first .placeholder-icon' ).removeClass( 'dashicons-admin-home' );
		closest.find( '.unit.new:first .placeholder-icon' ).addClass( 'dashicons-admin-multisite' );
	} else {
		closest.find( '.unit.new:first .placeholder-icon' ).removeClass( 'dashicons-admin-multisite' );
		closest.find( '.unit.new:first .placeholder-icon' ).addClass( 'dashicons-admin-home' );
	}

	if ( closest.find( '.unit.new:first' ).hasClass( 'active' ) && closest.find( '.unit.new:first input[name="class"]' ).val() != jQuery( this ).data( 'type' ) ) {
	} else {
		closest.find( '.unit.new:first' ).toggleClass( 'active' );
	}

	if ( closest.find( '.unit.new:first' ).hasClass( 'active' ) ) {
		closest.find( '.unit.new:first.active input[type="text"]' ).focus();
	}

	closest.find( '.unit.new:first input[name="class"]' ).val( jQuery( this ).data( 'type' ) );
};

/**
 * Focus le champ 'title' pour créer un établissement
 *
 * @since 6.3.0
 * @version 6.3.0
 *
 * @param  {MouseEvent} event Les attributs lors du clic.
 * @return {void}
 */
window.eoxiaJS.digirisk.navigation.focusField = function( event ) {
	event.preventDefault();

	jQuery( this ).closest( '.unit.new' ).find( 'input[type="text"]' ).focus();
};

/**
 * Déplies ou replies tous les éléments enfants
 *
 * @since 6.3.0
 * @version 6.3.0
 *
 * @param  {MouseEvent} event Les attributs lors du clic
 * @return {void}
 */
window.eoxiaJS.digirisk.navigation.toggleAll = function( event ) {
	event.preventDefault();

	if ( jQuery( this ).hasClass( 'toggle-plus' ) ) {
		jQuery( '.digirisk-wrap .navigation-container .workunit-list .unit' ).addClass( 'toggled' );
	}

	if ( jQuery( this ).hasClass( 'toggle-minus' ) ) {
		jQuery( '.digirisk-wrap .navigation-container .workunit-list .unit.toggled' ).removeClass( 'toggled' );
	}
};

/**
 * Ajout la classe 'active' à l'élément.
 *
 * @since 6.3.0
 * @version 6.3.0
 *
 * @param  {HTMLDivElement} element L'attribut de l'élement.
 * @return {boolean}
 */
window.eoxiaJS.digirisk.navigation.setUnitActive = function( element ) {
	jQuery( '.digirisk-wrap .navigation-container .unit.active' ).removeClass( 'active' );
	jQuery( element ).closest( '.unit' ).addClass( 'active' );
	return true;
};

/**
 * Clic automatiquement sur le 'action-input'.
 *
 * @since 6.3.0
 * @version 6.3.0
 *
 * @param  {KeyboardEvent} event Les attributs du clavier.
 * @return {void}
 */
window.eoxiaJS.digirisk.navigation.triggerCreateSociety = function( event ) {
	if ( event.ctrlKey && 13 === event.keyCode ) {
		jQuery( this ).closest( '.unit.new' ).find( '.action-input' ).click();
	}
};

/**
 * Ajout de la classe 'active' au bloc 'navigation-container'.
 *
 * @since 6.3.0
 * @version 6.3.0
 *
 * @param  {TouchEvent} event [description]
 * @return {void}
 */
window.eoxiaJS.digirisk.navigation.openNavigationContainer = function( event ) {
	jQuery( '.digirisk-wrap .navigation-container' ).addClass( 'active' );
};

/**
 * Enlève la classe 'active' au bloc 'navigation-container'.
 *
 * @since 6.3.0
 * @version 6.3.0
 *
 * @param  {TouchEvent} event [description]
 * @return {void}
 */
window.eoxiaJS.digirisk.navigation.closeNavigationContainer = function( event ) {
	event.stopPropagation();

	jQuery( '.digirisk-wrap .navigation-container' ).removeClass( 'active' );
};

/**
 * Callback en cas de réussite de la requête Ajax "create_society"
 *
 * @since 6.3.0
 * @version 6.3.0
 *
 * @param  {HTMLDivElement} triggeredElement   L'élement HTML déclenchant la requête Ajax.
 * @param  {Object}        response {
 *     Les données renvoyées par la requête Ajax.
 *     @type {Object} data {
 *           @type {string} navigation_view La vue de la navigation.
 *           @type {string} content_view    La vue du contenu principale.
 *     }
 * }
 * @return {void}
 */
window.eoxiaJS.digirisk.navigation.createdSocietySuccess = function( triggeredElement, response ) {
	jQuery( '.workunit-list .unit.active' ).removeClass( 'active' );

	jQuery( triggeredElement ).closest( '.unit:not(.new)' ).find( '.spacer:first' ).removeClass( 'spacer' ).addClass( 'toggle-unit' );

	if ( jQuery( triggeredElement ).closest( '.sub-list' ).length ) {
		jQuery( triggeredElement ).closest( '.sub-list' ).replaceWith( response.data.navigation_view );
	} else {
		jQuery( triggeredElement ).closest( '.workunit-list' ).replaceWith( response.data.navigation_view );
	}

	jQuery( '.digirisk-wrap .main-container' ).replaceWith( response.data.content_view );
};

/**
 * Callback en cas de réussite de la requête Ajax "load_society"
 * Remplaces le template principale de l'application avec le template reçu dans la réponse de la requête Ajax.
 *
 * @param  {HTMLSpanElement} triggeredElement   L'élement HTML déclenchant la requête Ajax.
 * @param  {Object}        response             Les données renvoyées par la requête Ajax.
 * @return {void}
 *
 * @since 6.0.0
 * @version 7.0.0
 */
window.eoxiaJS.digirisk.navigation.loadedSocietySuccess = function( element, response ) {
	jQuery( '.digirisk-wrap .main-container' ).replaceWith( response.data.view );
	jQuery( '.digirisk-wrap .navigation-container' ).removeClass( 'active' );
};

/**
 * Initialise l'objet 'legalDisplay' ainsi que la méthode 'init' obligatoire pour la bibliothèque EoxiaJS.
 *
 * @since 6.3.0
 * @version 6.4.0
 */

window.eoxiaJS.digirisk.pageSorter = {};

window.eoxiaJS.digirisk.pageSorter.init = function() {
	jQuery( document ).on( 'click', '.sorter-page .button.button-primary', function( event ) {
		window.removeEventListener( 'beforeunload', window.eoxiaJS.digirisk.pageSorter.safeExit );
	} );

	if ( jQuery( '.sorter-page' ).length ) {
		jQuery( '.treetable' ).treetable( {	expandable: true } );
		jQuery( '.treetable' ).treetable( 'expandAll' );

		jQuery( '.treetable .digi-workunit, .treetable .digi-group' ).draggable( {
			helper: 'clone',
			opacity: .75,
			refreshPositions: true,
			revert: 'invalid',
			revertDuration: 300,
			scroll: true
		} );

		jQuery( '.treetable .digi-group, .digi-society' ).each( function() {
			jQuery( this ).parents( '.treetable tr' ).droppable( {
				accept: '.digi-workunit, .digi-group',
				drop: function( e, ui ) {
					var droppedEl = ui.draggable.parents( 'tr' );

					if ( droppedEl.data( 'ttId' ) == jQuery( this ).data( 'ttParentId' ) ) {
						e.preventDefault();
						return false;
					} else {
						window.addEventListener( 'beforeunload', window.eoxiaJS.digirisk.pageSorter.safeExit );

						jQuery( 'input[type="submit"]' ).attr( 'disabled', false );

						jQuery( 'input[name="menu_item_parent_id[' + droppedEl.data( 'ttId' ) + ']"]' ).val( jQuery( this ).data( 'ttId' ) );
						jQuery( '.treetable' ).treetable( 'move', droppedEl.data( 'ttId' ), jQuery( this ).data( 'ttId' ) );
					}
				},
				hoverClass: 'accept',
				over: function( e, ui ) {
					var droppedEl = ui.draggable.parents( 'tr' );
					if ( this != droppedEl[0] && ! jQuery( this ).is( '.expanded' ) ) {
						jQuery( '.treetable' ).treetable( 'expandNode', jQuery( this ).data( 'ttId' ) );
					}
				}
			});
		});
	}
};

/**
 * Vérification avant la fermeture de la page si toutes les données sont enregistrées.
 *
 * @since 6.3.0
 * @version 6.4.0
 *
 * @param  {WindowEventHandlers} event L'évènement de la fenêtre.
 * @return {string}
 */
window.eoxiaJS.digirisk.pageSorter.safeExit = function( event ) {
	var confirmationMessage = 'Vos données sont en attentes d\'enregistrement';

	event.returnValue = confirmationMessage;
	return confirmationMessage;
};

window.eoxiaJS.digirisk.recommendation = {};

window.eoxiaJS.digirisk.recommendation.init = function() {
	window.eoxiaJS.digirisk.recommendation.event();
};

window.eoxiaJS.digirisk.recommendation.event = function() {
	jQuery( document ).on( 'click', '.table.recommendation .categorie-container .item', window.eoxiaJS.digirisk.recommendation.selectRecommendation );
};

/**
 * Lors du clic sur une recommendation, remplace le contenu du toggle par l'image de la recommendation sélectionnée.
 *
 * @since   6.0.0
 * @version 7.0.0
 *
 * @param  {ClickEvent} event [description]
 * @return {void}
 */
window.eoxiaJS.digirisk.recommendation.selectRecommendation = function( event ) {
	var element = jQuery( this );

	element.closest( '.content' ).removeClass( 'active' );
	element.closest( 'tr' ).find( 'input[name="recommendation_category_id"]' ).val( element.data( 'id' ) );

	element.closest( '.wpeo-dropdown' ).find( '.dropdown-toggle span' ).hide();
	element.closest( '.wpeo-dropdown' ).find( '.dropdown-toggle img' ).show();
	element.closest( '.wpeo-dropdown' ).find( '.dropdown-toggle img' ).attr( 'src', element.find( 'img' ).attr( 'src' ) );
	element.closest( '.wpeo-dropdown' ).find( '.dropdown-toggle img' ).attr( 'srcset', '' );
	element.closest( '.wpeo-dropdown' ).find( '.dropdown-toggle img' ).attr( 'sizes', '' );
	element.closest( '.wpeo-dropdown' ).find( '.dropdown-toggle img' ).attr( 'aria-label', element.closest( '.tooltip' ).attr( 'aria-label' ) );

	element.closest( '.row' ).find( '.categorie-container.tooltip' ).removeClass( 'active' );

	// Rend le bouton "active".
	element.closest( 'tr' ).find( '.action .wpeo-button.button-disable' ).removeClass( 'button-disable' );
};

/**
 * Vérifie que le champs "taxonomy[digi-recommendation][] soit différent de -1".
 *
 * @since 6.0.0
 * @version 7.0.0
 *
 * @param  {HTMLDivElement} triggeredElement L'élément déclenchant l'action.
 * @return {bool}                            Si true, le formulaire est envoyé. Si false, on annule l'envoie du formulaire.
 */
window.eoxiaJS.digirisk.recommendation.beforeSaveRecommendation = function( triggeredElement ) {

	// Remet à 0 les styles.
	triggeredElement.closest( '.recommendation-row' ).find( '.categorie-container' ).removeClass( 'active' );

	// Vérification du danger.
	if ( '-1' === triggeredElement.closest( '.recommendation-row' ).find( 'input[name="recommendation_category_id"]' ).val() ) {
		triggeredElement.closest( '.recommendation-row' ).find( '.categorie-container' ).addClass( 'active' );
		return false;
	}

	return true;
};

/**
 * Le callback en cas de réussite à la requête Ajax "save_recommendation".
 * Remplaces le contenu du tableau "recommendation" par le template renvoyé par la requête Ajax.
 *
 * @param  {HTMLDivElement} triggeredElement  L'élement HTML déclenchant la requête Ajax.
 * @param  {Object}         response          Les données renvoyées par la requête Ajax.
 * @return {void}
 *
 * @since 1.0
 * @version 6.2.4.0
 */
window.eoxiaJS.digirisk.recommendation.savedRecommendationSuccess = function( element, response ) {
	jQuery( 'table.recommendation' ).replaceWith( response.data.template );
	window.eoxiaJS.digirisk.date.init();
};

/**
 * Le callback en cas de réussite à la requête Ajax "load_recommendation".
 * Remplaces le contenu de la ligne du tableau "recommendation" par le template renvoyé par la requête Ajax.
 *
 * @param  {HTMLDivElement} triggeredElement  L'élement HTML déclenchant la requête Ajax.
 * @param  {Object}         response          Les données renvoyées par la requête Ajax.
 * @return {void}
 *
 * @since 1.0
 * @version 6.2.4.0
 */
window.eoxiaJS.digirisk.recommendation.loadedRecommendationSuccess = function( element, response ) {
	jQuery( element ).closest( 'tr' ).replaceWith( response.data.template );
	window.eoxiaJS.digirisk.date.init();
};

/**
 * Le callback en cas de réussite à la requête Ajax "delete_recommendation".
 * Supprimes la ligne du tableau affectée par l'action.
 *
 * @param  {HTMLDivElement} triggeredElement  L'élement HTML déclenchant la requête Ajax.
 * @param  {Object}         response          Les données renvoyées par la requête Ajax.
 * @return {void}
 *
 * @since 1.0
 * @version 6.2.4.0
 */
window.eoxiaJS.digirisk.recommendation.deletedRecommendationSuccess = function( element, response ) {
	jQuery( element ).closest( 'tr' ).fadeOut();
};

/**
 * Initialise l'objet "riskCategory" ainsi que la méthode "init" obligatoire pour la bibliothèque EoxiaJS.
 *
 * @since 6.0.0
 * @version 7.0.0
 */
window.eoxiaJS.digirisk.riskCategory = {};

window.eoxiaJS.digirisk.riskCategory.init = function() {
	window.eoxiaJS.digirisk.riskCategory.event();
};

window.eoxiaJS.digirisk.riskCategory.event = function() {
	jQuery( document ).on( 'click', '.table .category-danger .item', window.eoxiaJS.digirisk.riskCategory.selectDanger );
};

/**
 * Lors du clic sur un riskCategory, remplaces le contenu du toggle et met l'image du risque sélectionné.
 *
 * @param  {MouseEvent} event [description]
 * @return {void}
 *
 * @since 6.0.0
 * @version 7.0.0
 */
window.eoxiaJS.digirisk.riskCategory.selectDanger = function( event ) {
	var element = jQuery( this );
	var data = {};
	element.closest( '.content' ).removeClass( 'active' );
	element.closest( 'tr' ).find( 'input.input-hidden-danger' ).val( element.data( 'id' ) );
	element.closest( '.wpeo-dropdown' ).find( '.dropdown-toggle span' ).hide();
	element.closest( '.wpeo-dropdown' ).find( '.dropdown-toggle img' ).show();
	element.closest( '.wpeo-dropdown' ).find( '.dropdown-toggle img' ).attr( 'src', element.find( 'img' ).attr( 'src' ) );
	element.closest( '.wpeo-dropdown' ).find( '.dropdown-toggle img' ).attr( 'srcset', '' );
	element.closest( '.wpeo-dropdown' ).find( '.dropdown-toggle img' ).attr( 'sizes', '' );
	element.closest( '.wpeo-dropdown' ).find( '.dropdown-toggle img' ).attr( 'aria-label', element.closest( '.tooltip' ).attr( 'aria-label' ) );

	window.eoxiaJS.tooltip.remove( element.closest( '.risk-row' ).find( '.category-danger.wpeo-tooltip-event' ) );

	// Rend le bouton "active".
	if ( '{}' !== element.closest( '.risk-row' ).find( 'textarea[name="evaluation_variables"]' ).val() ) {
		element.closest( 'tr' ).find( '.action .wpeo-button.button-disable' ).removeClass( 'button-disable' );
	}

	// Si aucune donnée est entrée, on lance la requête.
	if ( element.data( 'is-preset' ) && ! window.eoxiaJS.digirisk.riskCategory.haveDataInInput( element ) ) {
		data.action = 'check_predefined_danger';
		data._wpnonce = element.closest( '.wpeo-dropdown' ).data( 'nonce' );
		data.danger_id = element.data( 'id' );
		data.society_id = element.closest( '.risk-row' ).find( 'input[name="parent_id"] ' ).val();

		window.eoxiaJS.loader.display( jQuery( this ).closest( 'table' ) );

		window.eoxiaJS.request.send( jQuery( this ).closest( '.wpeo-dropdown' ), data );
	}
};

window.eoxiaJS.digirisk.riskCategory.haveDataInInput = function( element ) {
	if ( '{}' != element.closest( '.risk-row' ).find( 'textarea[name="evaluation_variables"]' ).val() ) {
		return true;
	}

	if ( '' != element.closest( '.risk-row' ).find( 'textarea[name="list_comment[0][content]"]' ).val() ) {
		return true;
	}

	return false;
};

"use strict";

var digi_risk_comment = {
	$: undefined,

	event: function( $ ) {
		digi_risk_comment.$ = $;

    digi_risk_comment.$( document ).on( 'click', '.wp-digi-action-comment-delete', function( event ) { digi_risk_comment.delete_comment( event, digi_risk_comment.$( this ) ); } );
	},

  delete_comment: function( event, element ) {
    if( window.confirm( window.digi_confirm_delete ) ) {
      var data = {
        action: 'delete_comment',
        _wpnonce: digi_risk_comment.$( element ).data( 'nonce' ),
        risk_id: digi_risk_comment.$( element ).data( 'risk-id' ),
        id: digi_risk_comment.$( element ).data( 'id' ),
      };
      digi_risk_comment.$( element ).closest( 'li' ).remove();
      digi_risk_comment.$.post( window.ajaxurl, data, function() {} );
    }
  },

	reset_create_form: function() {
		digi_risk_comment.$( '.wp-digi-risk-item-new .wp-digi-risk-comment textarea' ).val('');
	}
};

/**
 * Initialise l'objet "risk_page" ainsi que la méthode "init" obligatoire pour la bibliothèque EoxiaJS.
 *
 * @since 6.2.3
 */

window.eoxiaJS.digirisk.risk_page = {};

window.eoxiaJS.digirisk.risk_page.init = function() {
	window.eoxiaJS.digirisk.risk_page.event();
};

window.eoxiaJS.digirisk.risk_page.event = function() {
	jQuery( document ).on( 'click', '.risk-page .save-all:not(.grey)', window.eoxiaJS.digirisk.risk_page.saveRisks );
	jQuery( document ).on( 'click', '.risk-page table tr input:not(input[type="checkbox"]), .risk-page tr .wpeo-dropdown .dropdown-toggle, .risk-page tr textarea, .risk-page tr .popup, .risk-page tr .action, .risk-page .cotation', window.eoxiaJS.digirisk.risk_page.checkTheCheckbox );

	jQuery( document ).on( 'click', '.risk-page .wp-digi-pagination a', window.eoxiaJS.digirisk.risk_page.pagination );
};

window.eoxiaJS.digirisk.risk_page.saveRisks = function( event ) {
	if ( event ) {
		event.preventDefault();
	}

	jQuery( '.risk-page tr  .edit-risk.checked:first' ).click();
	jQuery( '.risk-page .save-all' ).addClass( 'button-disable' );
};

/**
 * Coches la case à cocher lors de l'action dans une ligne du tableau.
 *
 * @param  {ClickEvent} event L'état du clic.
 * @return {void}
 *
 * @since 6.2.3
 */
window.eoxiaJS.digirisk.risk_page.checkTheCheckbox = function( event ) {
	jQuery( this ).closest( 'tr' ).find( 'input[type="checkbox"]' ).prop( 'checked', true );
	jQuery( this ).closest( 'tr' ).find( '.edit-risk' ).addClass( 'checked' );
	jQuery( '.risk-page .save-all' ).removeClass( 'button-disable' );
};

window.eoxiaJS.digirisk.risk_page.savedRiskSuccess = function( element, response ) {
	jQuery( element ).closest( 'tr' ).replaceWith( response.data.template );
	window.eoxiaJS.digirisk.risk_page.saveRisks( undefined );
};

/**
 * Gestion de la pagination des risques dans la page "Risques".
 *
 * @param  {ClickEvent} event [description]
 * @return {void}
 *
 * @since 6.2.6
 */
window.eoxiaJS.digirisk.risk_page.pagination = function( event ) {
	var href = jQuery( this ).attr( 'href' ).split( '&' );
	var nextPage = href[1].replace( 'current_page=', '' );

	jQuery( '.risk-page' ).addClass( 'loading' );

	var data = {
		action: 'paginate_risk',
		next_page: nextPage
	};

	event.preventDefault();

	jQuery.post( window.ajaxurl, data, function( view ) {
		jQuery( '.risk-page' ).replaceWith( view );
	} );
};

/**
 * Initialise l'objet "risk" ainsi que la méthode "init" obligatoire pour la bibliothèque EoxiaJS.
 *
 * @since 6.0.0
 * @version 7.0.0
 */
window.eoxiaJS.digirisk.risk = {};

window.eoxiaJS.digirisk.risk.init = function() {};

window.eoxiaJS.digirisk.risk.deletedRiskSuccess = function( element, response ) {
	element.closest( 'tr' ).fadeOut();
};

window.eoxiaJS.digirisk.risk.loadedRiskSuccess = function( element, response ) {
  element.closest( 'tr' ).replaceWith( response.data.template );
};

window.eoxiaJS.digirisk.risk.beforeSaveRisk = function( triggeredElement ) {
	// Remet à 0 les styles.
	window.eoxiaJS.tooltip.remove( triggeredElement.closest( '.risk-row' ).find( '.category-danger.wpeo-tooltip-event' ) );
	window.eoxiaJS.tooltip.remove( triggeredElement.closest( '.risk-row' ).find( '.cotation-container.wpeo-tooltip-event' ) );

	// Vérification du danger.
	if ( '-1' === triggeredElement.closest( '.risk-row' ).find( 'input[name="risk_category_id"]' ).val() && ! jQuery( '#digi-danger-preset' ).length ) {
		window.eoxiaJS.tooltip.display( triggeredElement.closest( '.risk-row' ).find( '.category-danger.wpeo-tooltip-event' ) );
		return false;
	}

	// Vérification de la cotation.
	if ( '{}' === triggeredElement.closest( '.risk-row' ).find( 'textarea[name="evaluation_variables"]' ).val() && ! jQuery( '#digi-danger-preset' ).length ) {
		window.eoxiaJS.tooltip.display( triggeredElement.closest( '.risk-row' ).find( '.cotation-container.wpeo-tooltip-event' ) );
		return false;
	}

	return true;
};

/**
 * Le callback en cas de réussite à la requête Ajax "edit_risk".
 * Remplaces le contenu du tableau "risk" par le template renvoyé par la requête Ajax.
 *
 * @param  {HTMLDivElement} triggeredElement  L'élement HTML déclenchant la requête Ajax.
 * @param  {Object}         response          Les données renvoyées par la requête Ajax.
 * @return {void}
 *
 * @since 6.0.0
 */
window.eoxiaJS.digirisk.risk.savedRiskSuccess = function( triggeredElement, response ) {
	triggeredElement.closest( 'table.risk' ).replaceWith( response.data.template );
};

/**
 * Le callback en cas de réussite à la requête Ajax "check_predefined_danger".
 *
 * @param  {HTMLDivElement} triggeredElement  L'élement HTML déclenchant la requête Ajax.
 * @param  {Object}         response          Les données renvoyées par la requête Ajax.
 * @return {void}
 *
 * @since 6.2.9
 */
window.eoxiaJS.digirisk.risk.checkedPredefinedDanger = function( triggeredElement, response ) {
	triggeredElement.closest( 'table' ).removeClass( 'loading' );
	triggeredElement.closest( '.risk-row' ).replaceWith( response.data.view );
};

/**
 * Initialise l'objet "setting" ainsi que la méthode "init" obligatoire pour la bibliothèque EoxiaJS.
 *
 * @since 6.0.0
 */
window.eoxiaJS.digirisk.setting = {};

window.eoxiaJS.digirisk.setting.init = function() {
	window.eoxiaJS.digirisk.setting.event();
};

window.eoxiaJS.digirisk.setting.event = function() {
	jQuery( document ).on( 'click', '#digi-danger-preset .save-all', window.eoxiaJS.digirisk.setting.savePresetRisks );
	jQuery( document ).on( 'click', '#digi-danger-preset table tr input:not(input[type="checkbox"]), #digi-danger-preset tr .toggle, #digi-danger-preset .dropdown-toggle, #digi-danger-preset tr textarea, #digi-danger-preset tr .popup, #digi-danger-preset tr .action', window.eoxiaJS.digirisk.setting.checkTheCheckbox );
	jQuery( document ).on( 'click', '.settings_page_digirisk-setting .list-users .wp-digi-pagination a', window.eoxiaJS.digirisk.setting.pagination );
};

window.eoxiaJS.digirisk.setting.savePresetRisks = function( event ) {
	if ( event ) {
		event.preventDefault();
	}

	if ( jQuery( '#digi-danger-preset tr.risk-row.edit.checked .save.action-input' ).length ) {
		window.eoxiaJS.loader.display( jQuery( '#digi-danger-preset .save-all' ) );
		jQuery( '#digi-danger-preset tr.risk-row.edit.checked .save.action-input' ).click();
	}
};


/**
 * Gestion de la pagination des utilisateurs.
 *
 * @param  {ClickEvent} event [description]
 *
 * @since 6.4.0
 */
window.eoxiaJS.digirisk.setting.pagination = function( event ) {
	var href = jQuery( this ).attr( 'href' ).split( '&' );
	var nextPage = href[2].replace( 'current_page=', '' );

	jQuery( '.list-users' ).addClass( 'loading' );

	var data = {
		action: 'paginate_setting_page_user',
		next_page: nextPage
	};

	event.preventDefault();

	jQuery.post( window.ajaxurl, data, function( view ) {
		jQuery( '.list-users' ).replaceWith( view );
		window.eoxiaJS.digirisk.search.renderChanged();
	} );
};


/**
 * Coches la case à cocher lors de l'action dans une ligne du tableau.
 *
 * @param  {ClickEvent} event L'état du clic.
 * @return {void}
 *
 * @since 6.2.3
 */
window.eoxiaJS.digirisk.setting.checkTheCheckbox = function( event ) {
	jQuery( this ).closest( 'tr.risk-row.edit' ).addClass( 'checked' );
	jQuery( '#digi-danger-preset .save-all' ).removeClass( 'disable' ).addClass( 'green' );
};

window.eoxiaJS.digirisk.setting.savedRiskSuccess = function( element, response ) {
	if ( jQuery( '#digi-danger-preset tr.risk-row.edit.checked .save.action-input' ).length <= 1 ) {
		window.eoxiaJS.loader.remove( jQuery( '#digi-danger-preset .save-all' ) );
	}

	jQuery( element ).closest( 'tr' ).replaceWith( response.data.template );
};


/**
 * Le callback en cas de réussite à la requête Ajax "save_capacity".
 * Affiches le message de "success".
 *
 * @param  {HTMLDivElement} triggeredElement  L'élement HTML déclenchant la requête Ajax.
 * @param  {Object}         response          Les données renvoyées par la requête Ajax.
 * @return {void}
 *
 * @since 6.4.0
 */
window.eoxiaJS.digirisk.setting.savedCapability = function( triggeredElement, response ) {};

window.eoxiaJS.digirisk.sheet_groupment = {};

window.eoxiaJS.digirisk.sheet_groupment.init = function() {};

/**
 * Le callback en cas de réussite à la requête Ajax "generate_fiche_de_groupement".
 * Cliques sur le bouton "Fiche de groupement" pour recharger la vue.
 *
 * @param  {HTMLDivElement} triggeredElement  L'élement HTML déclenchant la requête Ajax.
 * @param  {Object}         response          Les données renvoyées par la requête Ajax.
 * @return {void}
 *
 * @since 6.1.0
 * @version 6.2.4
 */
window.eoxiaJS.digirisk.sheet_groupment.generatedSheetGroupment = function( triggeredElement, response ) {
	jQuery( '.tab-element[data-target="digi-fiche-de-groupement"]' ).click();
};

/**
 * Initialise l'objet "sheet_workunit" ainsi que la méthode "init" obligatoire pour la bibliothèque EoxiaJS.
 * Gères le callback en cas de réussite de la génération d'une fiche de poste.
 *
 * @since 6.2.4
 */

window.eoxiaJS.digirisk.sheet_workunit = {};

window.eoxiaJS.digirisk.sheet_workunit.init = function() {};

/**
 * Le callback en cas de réussite à la requête Ajax "generate_fiche_de_poste".
 * Clic sur le bouton "Fiche de poste" pour recharger la vue.
 *
 * @param  {HTMLAnchorElement} triggeredElement  L'élement HTML déclenchant la requête Ajax.
 * @param  {Object}         response          Les données renvoyées par la requête Ajax.
 * @return {void}
 *
 * @since 6.2.4
 */
window.eoxiaJS.digirisk.sheet_workunit.generatedFicheDePosteSuccess = function() {
	jQuery( '.tab-element[data-target="digi-fiche-de-poste"]' ).click();
};

jQuery( document ).ready(function() {
	jQuery(document).unbind('keydown').bind('keydown', function (event) {
    var doPrevent = false;
    if (event.keyCode === 8) {
        var d = event.srcElement || event.target;
        if ((d.tagName.toUpperCase() === 'INPUT' &&
             (
                 d.type.toUpperCase() === 'TEXT' ||
                 d.type.toUpperCase() === 'PASSWORD' ||
                 d.type.toUpperCase() === 'FILE' ||
                 d.type.toUpperCase() === 'SEARCH' ||
                 d.type.toUpperCase() === 'EMAIL' ||
                 d.type.toUpperCase() === 'NUMBER' ||
                 d.type.toUpperCase() === 'DATE' )
             ) ||
             ( d.tagName.toUpperCase() === 'TEXTAREA' ) ||
						 d.getAttribute( 'contenteditable' ) ) {
            doPrevent = d.readOnly || d.disabled;
        }
        else {
            doPrevent = true;
        }
    }

    if (doPrevent) {
        event.preventDefault();
    }
});
});

/**
 * Initialise l'objet "societyAdvancedOptions" ainsi que la méthode "init" obligatoire pour la bibliothèque EoxiaJS.
 *
 * @since 6.2.5.0
 * @version 6.2.5.0
 */
window.eoxiaJS.digirisk.societyAdvancedOptions = {};

window.eoxiaJS.digirisk.societyAdvancedOptions.init = function() {};

/**
 * Callback en cas de réussite de la requête Ajax "advanced_options_move_to"
 * Remplaces le template principale de l'application avec le template reçu dans la réponse de la requête Ajax.
 *
 * @param  {HTMLDivElement} triggeredElement   L'élement HTML déclenchant la requête Ajax.
 * @param  {Object}        response            Les données renvoyées par la requête Ajax.
 * @return {void}
 *
 * @since 6.2.5.0
 * @version 6.2.5.0
 */
window.eoxiaJS.digirisk.societyAdvancedOptions.savedAdvancedOptionsMoveTo = function( element, response ) {
	jQuery( '.digirisk-wrap' ).replaceWith( response.data.view );
};

/**
 * Initialise l'objet "society" ainsi que la méthode "init" obligatoire pour la bibliothèque EoxiaJS.
 *
 * @since   6.0.0
 */
window.eoxiaJS.digirisk.society = {};

window.eoxiaJS.digirisk.society.init = function() {
	window.eoxiaJS.digirisk.society.event();
};

window.eoxiaJS.digirisk.society.event = function() {
	jQuery( document ).on( 'keyup', '.main-header input[name="title"]', window.eoxiaJS.digirisk.society.keyUpSaveIdentity );
	jQuery( document ).on( 'click', '.main-header .edit', window.eoxiaJS.digirisk.society.focusInputTitle );
	jQuery( document ).on( 'keyup', '.digirisk-wrap .form.society-informations .form-element input, .digirisk-wrap .form.society-informations .form-element textarea', window.eoxiaJS.digirisk.society.enableSaveButton );
};

/**
 * Lorsque qu'on lache une touche dans le champ de texte "title", on fait apparaitre le bouton "Enregistrer".
 * Si la touche laché est "entrée" on appuie sur le bouton "Enregistrer".
 *
 * @param  {KeyboardEvent} event L'état du clavier lors du "keyup"
 *
 * @since 6.0.0
 */
window.eoxiaJS.digirisk.society.keyUpSaveIdentity = function( event ) {
	jQuery( '.digirisk-wrap .main-container .main-header .unit-header .edit' ).hide();
	jQuery( '.digirisk-wrap .main-container .main-header .unit-header .action-input.save' ).addClass( 'active' );

	if ( 13 === event.keyCode ) {
		jQuery( '.digirisk-wrap .main-container .main-header .unit-header .action-input.save' ).click();
	}
};

/**
 * Focus le titre de la société lors du clic sur le bouton "edit".
 *
 * @since 6.4.4
 *
 * @param  {ClickEvent} event L'état de la souris.
 */
window.eoxiaJS.digirisk.society.focusInputTitle = function( event ) {
	jQuery( this ).closest( '.main-header' ).find( 'input[name="title"]' ).focus().select();

	jQuery( this ).hide();
	jQuery( '.digirisk-wrap .main-container .main-header .unit-header .action-input.save' ).addClass( 'active' );
};

/**
 * Lorsque qu'on lache une touche dans les champs de texte de 'form society-informations', on rend le bouton 'enabled'
 *
 * @param  {KeyboardEvent} event L'état du clavier lors du "keyup"
 * @return {void}
 *
 * @since 6.3.0
 */
window.eoxiaJS.digirisk.society.enableSaveButton = function( event ) {
	jQuery( '.digirisk-wrap .form.society-informations button.green' ).removeClass( 'disable' );
};

/**
 * Callback en cas de réussite de la requête Ajax "save_society"
 * Remplaces le template principale de l'application avec le template reçu dans la réponse de la requête Ajax.
 *
 * @param  {HTMLDivElement} triggeredElement   L'élement HTML déclenchant la requête Ajax.
 * @param  {Object}        response            Les données renvoyées par la requête Ajax.
 * @return {void}
 *
 * @since 6.0.0
 */
window.eoxiaJS.digirisk.society.savedSocietySuccess = function( element, response ) {
	jQuery( '.digirisk-wrap' ).replaceWith( response.data.template );
};

/**
 * Callback en cas de réussite de la requête Ajax "delete_society"
 * Remplaces le template principale de l'application avec le template reçu dans la réponse de la requête Ajax.
 *
 * @param  {HTMLLiElement} triggeredElement   L'élement HTML déclenchant la requête Ajax.
 * @param  {Object}        response          Les données renvoyées par la requête Ajax.
 * @return {void}
 *
 * @since 6.0.0
 */
window.eoxiaJS.digirisk.society.deletedSocietySuccess = function( triggeredElement, response ) {
	jQuery( '.digirisk-wrap' ).replaceWith( response.data.template );
};

/**
 * Callback en cas de réussite de la requête Ajax "save_groupment_configuration".
 * Remplaces les titres dans la navigation et le header du contenu principale.
 *
 * @param  {HTMLLiElement} triggeredElement   L'élement HTML déclenchant la requête Ajax.
 * @param  {Object}        response          Les données renvoyées par la requête Ajax.
 * @return {void}
 *
 * @since   6.0.0
 */
window.eoxiaJS.digirisk.society.savedSocietyConfigurationSuccess = function( triggeredElement, response ) {
	if ( 'digi-group' === response.data.society.type ) {
		jQuery( '.digirisk-wrap .workunit-navigation .title' ).text( response.data.society.data.unique_identifier + ' - ' + response.data.society.data.title );
	} else if ( 'digi-workunit' === response.data.society.type ) {
		jQuery( '.digirisk-wrap .workunit-list span[data-workunit-id="' + response.data.society.data.id + '"] span' ).text( response.data.society.data.title );
		jQuery( '.digirisk-wrap .workunit-list span[data-workunit-id="' + response.data.society.data.id + '"] span' ).attr( 'title', response.data.society.data.title );
	} else {
		jQuery( '.digirisk-wrap .navigation-container .society-header .title' ).text( response.data.society.data.title );
	}

	jQuery( '.digirisk-wrap .main-container .main-header input[name="title"]' ).val( response.data.society.data.title );

	jQuery( '.digirisk-wrap .main-content' ).replaceWith( response.data.view );
};

window.eoxiaJS.digirisk.tools = {};

window.eoxiaJS.digirisk.tools.init = function() {
	window.eoxiaJS.digirisk.tools.event();
};

window.eoxiaJS.digirisk.tools.event = function() {
	jQuery( document ).on( 'click', '.digi-tools-main-container .nav-tab', window.eoxiaJS.digirisk.tools.tab_switcher );
	jQuery( document ).on( 'click', '.reset-method-evaluation', window.eoxiaJS.digirisk.tools.reset_evaluation_method );
	jQuery( document ).on( 'click', '.element-risk-compilation', window.eoxiaJS.digirisk.tools.risk_fixer );
	jQuery( document ).on( 'click', '.fix-recommendation', window.eoxiaJS.digirisk.tools.recommendation_fixer );
	jQuery( document ).on( 'click', '.fix-doc', window.eoxiaJS.digirisk.tools.doc_fixer );
};

window.eoxiaJS.digirisk.tools.tab_switcher = function( event ) {
  event.preventDefault();

  /**	Remove all calss active on all tabs	*/
  jQuery( this ).closest( "h2" ).children( ".nav-tab" ).each( function(){
	  jQuery( this ).removeClass( "nav-tab-active" );
  });
  /**	Add the active class on clicked tab	*/
  jQuery( this ).addClass( "nav-tab-active" );

  /**	Hide the different container and display the selected container	*/
  jQuery( this ).closest( ".digi-tools-main-container" ).find( ".tab-content" ).each( function(){
	  jQuery( this ).hide();
  });

  jQuery( "#" + jQuery( this ).attr( "data-id" ) ).show();
},

window.eoxiaJS.digirisk.tools.reset_evaluation_method = function( event ) {
  event.preventDefault();

  if ( window.confirm( window.digi_tools_confirm ) ) {
    jQuery( this ).addClass( "wp-digi-loading" );
    jQuery( this ).closest( 'div' ).find( 'ul' ).html('');

    var li = document.createElement( 'li' );
    li.innerHTML = window.digi_tools_in_progress;
    jQuery( this ).closest( 'div' ).find( 'ul' ).append( li );

    var data = {
      action: 'reset_method_evaluation',
      _wpnonce: jQuery( this ).data( 'nonce' )
    };

		window.eoxiaJS.digirisk.tools.exec_request( li, data, this );
  }
},

window.eoxiaJS.digirisk.tools.risk_fixer = function( event ) {
  event.preventDefault();

  jQuery( this ).addClass( "wp-digi-loading" );
  jQuery( this ).closest( 'div' ).find( 'ul' ).html('');

  var li = document.createElement( 'li' );
  li.innerHTML = window.digi_tools_in_progress;
  jQuery( this ).closest( 'div' ).find( 'ul' ).append( li );

  var data = {
    action: 'compil_risk_list',
    _wpnonce: jQuery( this ).data( 'nonce' )
  };

  window.eoxiaJS.digirisk.tools.exec_request( li, data, this );
},

window.eoxiaJS.digirisk.tools.recommendation_fixer = function( event ) {
  event.preventDefault();

  jQuery( this ).addClass( "wp-digi-loading" );
  jQuery( this ).closest( 'div' ).find( 'ul' ).html('');

  var li = document.createElement( 'li' );
  li.innerHTML = window.digi_tools_in_progress;
  jQuery( this ).closest( 'div' ).find( 'ul' ).append( li );

  var data = {
    action: 'transfert_recommendation',
    _wpnonce: jQuery( this ).data( 'nonce' )
  };

  window.eoxiaJS.digirisk.tools.exec_request( li, data, this );
},

window.eoxiaJS.digirisk.tools.doc_fixer = function( event ) {
  event.preventDefault();

  jQuery( this ).addClass( "wp-digi-loading" );
  jQuery( this ).closest( 'div' ).find( 'ul' ).html('');

  var li = document.createElement( 'li' );
  li.innerHTML = window.digi_tools_in_progress;
  jQuery( this ).closest( 'div' ).find( 'ul' ).append( li );

  var data = {
    action: 'transfert_doc',
    _wpnonce: jQuery( this ).data( 'nonce' )
  };

  window.eoxiaJS.digirisk.tools.exec_request( li, data, this );
},

window.eoxiaJS.digirisk.tools.exec_request = function( li, data, element ) {
	jQuery.post( window.ajaxurl, data, function() {
		jQuery( element ).removeClass( "wp-digi-loading" );
		li.innerHTML += ' ' + window.digi_tools_done;
	} );
}

jQuery( document ).ready( function(){
	/**
	 * Transform default form into an ajax form for datas transfer treatment
	 */
	jQuery( "#wpdigi-datastransfer-form" ).ajaxForm({
		dataType: "json",
		beforeSubmit: function( formData, jqForm, options ) {
			/**	Adding loading class to form button	*/
			jqForm.children( "button.wp-digi-bton" ).addClass( "wp-digi-loading" );
		},
		success: function( responseText, statusText, xhr, $form ) {
			$form.children( "button.wp-digi-bton" ).removeClass( "wp-digi-loading" );
			if ( !responseText[ 'status' ] && responseText[ 'reload_transfert' ] ) {
				if ( 'element' == responseText[ 'sub_action' ] ) {
					jQuery( ".wpdigi-transfered-element-nb-" + responseText[ 'element_type' ] ).html( responseText[ 'main_element_nb' ] );
					if ( responseText[ 'main_element_nb' ] == jQuery( ".wpdigi-to-transfer-element-nb-" + responseText[ 'element_type' ] ).html() ) {
						jQuery( ".wp-digi-datastransfer-element-type-name-" + responseText[ 'element_type' ] ).addClass( 'dashicons-before dashicons-yes' );
					}
					jQuery( ".wpdigi-transfered-element-nb-" + responseText[ 'sub_element_type' ] ).html( responseText[ 'sub_element_nb' ] );
					if ( responseText[ 'sub_element_nb' ] == jQuery( ".wpdigi-to-transfer-element-nb-" + responseText[ 'sub_element_type' ] ).html() ) {
						jQuery( ".wp-digi-datastransfer-element-type-name-" + responseText[ 'sub_element_type' ] ).addClass( 'dashicons-before dashicons-yes' );
					}
					if ( undefined != ( responseText['treated_tree'] ) ) {
						jQuery( ".wpdigi-tree-check-" + responseText[ 'element_type' ] ).html( responseText['treated_tree'] );
					}
				} else {
					jQuery( ".wpdigi-transfered-element-nb-documents" ).html( responseText[ 'transfered' ] );
					jQuery( ".wpdigi-not-transfered-element-nb-documents" ).html( responseText[ 'not_transfered' ] );
					if ( ( responseText[ 'transfered' ] + responseText[ 'not_transfered' ] ) == jQuery( ".wpdigi-to-transfer-element-nb-wpdigi-to-transfer-element-nb-documents" ).html() ) {
						jQuery( "wp-digi-datastransfer-element-type-name-documents" ).addClass( 'dashicons-before dashicons-yes' );
					}
				}
				if ( 'config_components' == responseText[ 'old_sub_action' ] ) {
					jQuery( ".wp-digi-transfert-components" ).html( responseText[ 'display_components_transfer' ] );
					$form.children( "input[name=action]" ).val( $form.children( "input[name=action]" ).val().replace( '-config_components', '' ) );
				}
				$form.children( "input[name=element_type_to_transfert]" ).val( responseText[ 'element_type' ] );
				$form.children( "input[name=sub_action]" ).val( responseText[ 'sub_action' ] );
				$form.submit();
			}
			else if ( responseText[ 'status' ] ) {
				jQuery( '#wp-digi-transfert-message' ).html( responseText[ "message" ] ).show();
				jQuery( "#wpdigi-datastransfer-form .wp-digi-bton-first" ).hide();
				setTimeout( function(){
				 window.location.href = responseText['redirect_to_url'];
				}, '1500' );
			}
		}
	});

	jQuery( "input[name=wpdigi-dtrans-userid-behaviour]" ).click( function(){
		if ( jQuery( this ).is( ":checked" ) ) {
			jQuery( ".wp-digi-dtrans-userid-options-container" ).html( "" ).hide();
		}
		else {
			var data = {
				"action": "wpdigi-dtrans-transfert-options-load",
				"element_type": jQuery( this ).closest( "form" ).children( "input[name=element_type_to_transfert]" ).val(),
			};
			jQuery( ".wp-digi-dtrans-userid-options-container" ).load( ajaxurl, data ).show();
		}
	});
});

/**
 *	Get the number of element created during transfer in order to inform user
 */
function get_treated_element( element ) {
	var data = {
		action: "wpdigi-dtrans-get-done-element",
		element: element,
	};
	jQuery.post( ajaxurl, data, function( response ) {
		var i;
		for (i = 0; i < response['transfert'].length; i++) {
			jQuery( "#digi-datas-transfert-progression-container-" + response['transfert'][ i ][ 'type' ] ).html( response['transfert'][ i ][ 'text' ]);
		}

		if ( response[ "auto_reload" ] ) {
			setTimeout( function(){
				get_treated_element( element );
			}, "500");
		}
	}, "json");
}

"use strict";

var digi_user_import = {
	$: undefined,

	init: function( event, $ ) {
		digi_user_import.$ = $;
		if ( event || event === undefined ) {
			digi_user_import.event();
		}
	},

	event: function() {
		digi_user_import.$( document ).on( 'submit', '#digi-data-import-user #digi-export-form', function( event ) { digi_user_import.create_export( event, digi_user_import.$( this ) ); } );
		digi_user_import.$( document ).on( 'change', '#digi-data-import-user #digi-import-form input[type="file"]', function( event ) { digi_user_import.make_import( event, digi_user_import.$( this ) ); } );
	},

	create_export: function( event, element ) {
		event.preventDefault();
		digi_user_import.$( element ).closest( 'form' ).ajaxSubmit( {
			'beforeSubmit': function() {
				digi_user_import.$( element ).closest( '.wp-digi-bloc-loader' ).addClass( "wp-digi-bloc-loading" );
			},
			success: function( response ) {
				digi_user_import.$( element ).closest( '.wp-digi-bloc-loader' ).removeClass( "wp-digi-bloc-loading" );
				window.digi_global.download_file( response.data.url_to_file, response.data.filename );
			}
		} );
	},

	make_import: function( event, element ) {
		event.preventDefault();

		var data = new FormData();
		data.append( 'file', digi_user_import.$( element )[0].files[0] );
		data.append( 'action', 'digi_import_user' );
		data.append( '_wpnonce', digi_user_import.$( element ).closest('form').find( 'input[name="_wpnonce"]' ).val() );
		data.append( 'index_element', 0 );

		digi_user_import.request_import( data );
	},

	request_import: function( data ) {
		digi_user_import.$.ajax( {
			url: ajaxurl,
			data: data,
			processData: false,
			contentType: false,
			type: 'POST',
			beforeSend: function() {
				digi_user_import.$('.digi-import-detail').html( window.digi_tools_in_progress );
			},
			success: function(response) {
				if ( response.success ) {
					if ( !response.data.end ) {
						var data = new FormData();
						data.append( 'action', 'digi_import_user' );
						data.append( '_wpnonce', digi_user_import.$( '#digi-data-import-user #digi-import-form' ).find( 'input[name="_wpnonce"]' ).val() );
						data.append( 'index_element', response.data.index_element );
						data.append( 'count_element', response.data.count_element );
						data.append( 'path_to_csv', response.data.path_to_csv );
						digi_user_import.$('.digi-import-detail').html( window.digi_tools_in_progress );
						digi_user_import.request_import(data);
					}
					else {
						digi_user_import.$('.digi-import-detail').html( window.digi_tools_done );
					}

					digi_user_import.$('progress').attr( 'max', response.data.count_element );
					digi_user_import.$('progress').val( ( response.data.index_element / response.data.count_element ) * response.data.count_element );

				}
				else {
					alert( 'Problème lors de l\'importation du modèle' );
					digi_installer.$( '#digi-data-export' ).removeClass( "wp-digi-bloc-loading" );
				}
			}
		} );
	}
};

jQuery( document ).ready(function( $ ) {
	digi_user_import.init( true, $ );
});

/**
 * Initialise l'objet "user" ainsi que la méthode "init" obligatoire pour la bibliothèque EoxiaJS.
 *
 * @since 6.0.0
 * @version 6.2.4
 */
window.eoxiaJS.digirisk.user = {};

window.eoxiaJS.digirisk.user.init = function() {
	window.eoxiaJS.digirisk.user.event();
};

/**
 * Initialise l'évènement relatif à la pagination.
 *
 * @return {void}
 *
 * @since 6.0.0
 * @version 6.2.4
 */
window.eoxiaJS.digirisk.user.event = function() {
	jQuery( document ).on( 'click', '.form-edit-user-assign .wp-digi-pagination a', window.eoxiaJS.digirisk.user.pagination );
};

/**
 * Le callback en cas de réussite à la requête Ajax "edit_user_assign".
 * Appel la méthode render de l'objet user avec la réponse de la requête Ajax.
 *
 * @param  {HTMLDivElement} triggeredElement  L'élement HTML déclenchant la requête Ajax.
 * @param  {Object}         response          Les données renvoyées par la requête Ajax.
 * @return {void}
 *
 * @since 6.0.0
 * @version 6.2.4
 */
window.eoxiaJS.digirisk.user.editUserAssignSuccess = function( triggeredElement, response ) {
	window.eoxiaJS.digirisk.user.render( response );
};

/**
 * Le callback en cas de réussite à la requête Ajax "detach_user".
 * Appel la méthode render de l'objet user avec la réponse de la requête Ajax.
 *
 * @param  {HTMLDivElement} triggeredElement  L'élement HTML déclenchant la requête Ajax.
 * @param  {Object}         response          Les données renvoyées par la requête Ajax.
 * @return {void}
 *
 * @since 6.0.0
 * @version 6.2.4
 */
window.eoxiaJS.digirisk.user.detachUserSuccess = function( triggeredElement, response ) {
	window.eoxiaJS.digirisk.user.render( response );
};

/**
 * Remplaces le contenu de la section ".users" avec la réponse de la requête Ajax de editUserAssignSuccess et detachUserSuccess.
 *
 * @param  {Object} response Les données renvoyées par la requête Ajax.
 * @return {void}
 *
 * @since 6.0.0
 * @version 6.2.5.0
 */
window.eoxiaJS.digirisk.user.render = function( response ) {
	jQuery( 'section.users' ).replaceWith( response.data.template );
	window.eoxiaJS.digirisk.render.call_render_changed();
};

window.eoxiaJS.digirisk.user.pagination = function( event ) {
	event.preventDefault();

	var href = jQuery( this ).attr( 'href' ).split( '&' );
	var next_page = href[1].replace('current_page=', '');
	var element_id = href[2].replace('element_id=', '');

	var data = {
		action: 'paginate_user',
		element_id: element_id,
		next_page: next_page
	};

	jQuery( '.form-edit-user-assign' ).addClass( 'loading' );

	jQuery.post( window.ajaxurl, data, function( view ) {
		jQuery( '.form-edit-user-assign' ).replaceWith( view );
	} );
};

/**
 * Initialise l'objet "userDashboard" ainsi que la méthode "init" obligatoire pour la bibliothèque EoxiaJS.
 *
 * @since 6.0.0
 * @version 6.4.0
 */

window.eoxiaJS.digirisk.userDashboard = {};

window.eoxiaJS.digirisk.userDashboard.init = function() {
	window.eoxiaJS.digirisk.userDashboard.event();
};

/**
 * Intialise les évènements.
 *
 * @since 6.0.0
 * @version 6.4.0
 *
 * @return {void}
 */
window.eoxiaJS.digirisk.userDashboard.event = function() {
	jQuery( document ).on( 'keyup', '.user-dashboard .input-domain-mail', window.eoxiaJS.digirisk.userDashboard.keyupUpdateEmail );
	jQuery( document ).on( 'keyup', '.user-dashboard table.users tr:last input.lastname', window.eoxiaJS.digirisk.userDashboard.keyupUpdateEmail );
	jQuery( document ).on( 'keyup', '.user-dashboard table.users tr:last input.firstname', window.eoxiaJS.digirisk.userDashboard.keyupUpdateEmail );
	jQuery( document ).on( 'keyup', '.user-dashboard table.users tr input', window.eoxiaJS.digirisk.userDashboard.keyEnterSendForm );
	jQuery( document ).on( 'keyup', '.user-dashboard .input-domain-mail', window.eoxiaJS.digirisk.userDashboard.keyEnterSendFormDomainMail );

	jQuery( document ).on( 'keyup', '.user-dashboard table.users tr:last input.lastname', window.eoxiaJS.digirisk.userDashboard.changeColorInputSubmit );
	jQuery( document ).on( 'keyup', '.user-dashboard table.users tr:last input.firstname', window.eoxiaJS.digirisk.userDashboard.changeColorInputSubmit );
	jQuery( document ).on( 'keyup', '.user-dashboard table.users tr:last input.email', window.eoxiaJS.digirisk.userDashboard.changeColorInputSubmit );

	jQuery( document ).on( 'click', '.user-dashboard .wp-digi-action-save-domain-mail', window.eoxiaJS.digirisk.userDashboard.save_domain_mail );
};

/**
 * Vérifie si le domaine de l'email a un format valide.
 *
 * @param  {HTMLDivElement} triggeredElement
 * @return {void}
 *
 * @since 6.2.5
 * @version 6.2.5
 */
window.eoxiaJS.digirisk.userDashboard.checkDomainEmailValid = function( triggeredElement ) {
	if ( ! window.regex.validateEndEmail( triggeredElement.closest( '.email-domain' ).find( 'input[type="text"]' ).val() ) ) {
		triggeredElement.closest( '.email-domain' ).find( 'label' ).addClass( 'active' );
		return false;
	} else {
		triggeredElement.closest( '.email-domain' ).find( 'label' ).removeClass( 'active' );
		return true;
	}
};

/**
 * Envoies une requête pour enregister le domaine de l'email.
 *
 * @param  {ClickEvent} event L'état de la souris lors du clic sur le bouton.
 *
 * @return {void}
 *
 * @since 6.0.0
 * @version 6.2.5
 */
window.eoxiaJS.digirisk.userDashboard.save_domain_mail = function( event ) {
	var element = jQuery( this );
	var data = {};

	event.preventDefault();

	data = {
		action: 'save_domain_mail',
		_wpnonce: element.data( 'nonce' ),
		domain_mail: element.closest( '.form-element' ).find( 'input' ).val()
	};

	jQuery.post( window.ajaxurl, data );
};

/**
 * Lors qu'une touche est en status "keyup" on met à jour le champ de texte "email" avec les données du champs de texte "nom", "prénom" et "Domaine de l'email".
 *
 * @param  {KeyEvent} event L'état du clavier lors de l'évènement "keyup"
 * @return {void}
 *
 * @since 6.0.0
 * @version 6.2.5
 */
window.eoxiaJS.digirisk.userDashboard.keyupUpdateEmail = function( event ) {
	var email = jQuery( '.user-dashboard table.users tr:last .email' ).val();
	var firstname = jQuery( '.user-dashboard table.users tr:last .firstname' ).val();
	var lastname = jQuery( '.user-dashboard table.users tr:last .lastname' ).val();
	var domainMail = jQuery( '.input-domain-mail' ).val();
	var together = window.eoxiaJS.global.removeDiacritics( firstname + '.' + lastname + '@' + domainMail ).toLowerCase();

	jQuery( '.user-dashboard table.users tr:last input[name="email"]' ).val( together );

	// Vérifie que l'évènement n'est pas déclenché dans le champ de texte du domaine de l'email.
	if ( 'input-domain-mail' !== event.target.className ) {
		window.eoxiaJS.digirisk.userDashboard.keyEnterSendForm( event, jQuery( this ) );
	}
};

/**
 * Si la touche "entrée" est appuyé, appuies sur le bouton "plus" pour ajouter un utilisateur.
 *
 * @param  {KeyEvent} event L'état du clavier lors de l'évènement "keyup"
 * @return {void}
 *
 * @since 6.0.0
 * @version 6.4.0
 */
window.eoxiaJS.digirisk.userDashboard.keyEnterSendForm = function( event ) {
	if ( 13 === event.keyCode ) {
		jQuery( this ).closest( '.user-row' ).find( '.action-input' ).click();

		event.preventDefault();
		return false;
	}
};

/**
 * Si la touche "entrée" est appuyé, appuies sur le bouton "plus" pour enregistrer le domaine de l'email.
 *
 * @param  {KeyEvent} event L'état du clavier lors de l'évènement "keyup"
 * @return {void}
 *
 * @since 6.4.0
 * @version 6.4.0
 */
window.eoxiaJS.digirisk.userDashboard.keyEnterSendFormDomainMail = function( event ) {
	if ( 13 === event.keyCode ) {
		jQuery( this ).closest( '.form' ).find( '.action-input' ).click();

		event.preventDefault();
		return false;
	}
};

/**
 * Si la ligne a un contenu, change la couleur du bouton.
 *
 * @param  {KeyboardEvent} event L'état du clavier.
 * @return {void}
 *
 * @since 6.2.6
 * @version 6.4.0
 */
window.eoxiaJS.digirisk.userDashboard.changeColorInputSubmit = function( event ) {
	var row = jQuery( this ).closest( 'tr' );

	if ( row.find( 'input[name="firstname"]' ).val() && row.find( 'input[name="lastname"]' ).val() && row.find( 'input[name="email"]' ).val() ) {
		row.find( '.action .wpeo-button.button-disable' ).removeClass( 'button-disable' );
	} else {
		row.find( '.action .wpeo-button' ).addClass( 'button-disable' );
	}
};

/**
 * Vérifie si les données du formulaire ne soit pas vide.
 * Toutes les données sont obligatoires.
 *
 * @since 6.4.0
 * @version 6.4.0
 *
 * @param  {HTMLDivElement} element Le bouton déclenchant l'action.
 * @return {boolean}                True ou false.
 */
window.eoxiaJS.digirisk.userDashboard.checkData = function( element ) {
	var row = element.closest( 'tr' );

	row.find( '.tooltip.active' ).removeClass( 'active' );

	if ( '' === row.find( 'input[name="lastname"]' ).val() ) {
		row.find( 'input[name="lastname"]' ).closest( '.tooltip' ).addClass( 'active' );
		return false;
	}

	if ( '' === row.find( 'input[name="firstname"]' ).val() ) {
		row.find( 'input[name="firstname"]' ).closest( '.tooltip' ).addClass( 'active' );
		return false;
	}

	if ( '' === row.find( 'input[name="email"]' ).val() ) {
		row.find( 'input[name="email"]' ).closest( '.tooltip' ).addClass( 'active' );
		return false;
	}

	return true;
};

/**
 * Le callback en cas de réussite à la requête Ajax "delete_user".
 * Supprimes la ligne de l'utilisateur.
 *
 * @param  {HTMLDivElement} triggeredElement  L'élement HTML déclenchant la requête Ajax.
 * @param  {Object}         response          Les données renvoyées par la requête Ajax.
 * @return {void}
 *
 * @since 6.0.0
 * @version 6.2.5
 */
window.eoxiaJS.digirisk.userDashboard.deletedUserSuccess = function( element, response ) {
	element.closest( 'tr' ).fadeOut();
};

/**
 * Le callback en cas de réussite à la requête Ajax "load_user".
 * Remplaces la vue de la ligne.
 *
 * @param  {HTMLDivElement} triggeredElement  L'élement HTML déclenchant la requête Ajax.
 * @param  {Object}         response          Les données renvoyées par la requête Ajax.
 * @return {void}
 *
 * @since 6.0.0
 * @version 6.2.5
 */
window.eoxiaJS.digirisk.userDashboard.loadedUserSuccess = function( element, response ) {
  element.closest( 'tr' ).replaceWith( response.data.template );
};

/**
 * Le callback en cas de réussite à la requête Ajax "save_user".
 * Remplaces le contenu du tableau "users" par le template renvoyé par la requête Ajax.
 *
 * Si response.data.error est égale à true, affiches le tooltip disant "Cette adresse email est déjà utilisée."
 *
 * @param  {HTMLDivElement} triggeredElement  L'élement HTML déclenchant la requête Ajax.
 * @param  {Object}         response          Les données renvoyées par la requête Ajax.
 * @return {void}
 *
 * @since 6.0.0
 * @version 6.4.0
 */
window.eoxiaJS.digirisk.userDashboard.savedUserSuccess = function( element, response ) {
	jQuery( '.user-dashboard table.users .tooltip.red.active' ).removeClass( 'active' );

	if ( response.data.error ) {
		jQuery( '.user-dashboard table.users .tooltip.email.red' ).addClass( 'active' );
	} else {
		jQuery( '.user-dashboard table.users' ).html( response.data.template );
		jQuery( '.user-dashboard table.users tr:last input.lastname' ).focus();
	}
};

"use strict";

var digi_user_detail = {
	$: undefined,
	event: function($) {
		digi_user_detail.$ = $;
    digi_user_detail.$( document ).on( 'click', '#wp-digi-form-add-staff .wp-digi-action-view-detail', function( event ) { digi_user_detail.load_staff_detail( event, digi_user_detail.$( this ) ); } );
		digi_user_detail.$( document ).on( 'click', '.user-detail .load-data', function (event ) { digi_user_detail.load_data( event, digi_user_detail.$( this ) ); } );
  },

	load_staff_detail: function( event, element ) {
		event.preventDefault();

		var user_id = digi_user_detail.$( element ).data( 'id' );
		var _wpnonce = digi_user_detail.$( element ).data( 'nonce' );

		var data = {
			action: 'load_user_detail',
			_wpnonce: _wpnonce,
			user_id: user_id
		};

		digi_user_detail.$( '.user-detail' ).addClass( 'wp-digi-bloc-loading' );

		digi_user_detail.$.post( window.ajaxurl, data, function( response ) {
			digi_user_detail.$( '.user-detail' ).replaceWith( response.data.template );
		});
	},

	load_data: function( event, element ) {
		var user_id = digi_user_detail.$( element ).closest( 'ul' ).data( 'user-id' );
		var _wpnonce = digi_user_detail.$( element ).closest( 'ul' ).data( 'nonce' );
		var data_name = digi_user_detail.$ (element ).data( 'name' );

		var data = {
			action: 'load_data',
			_wpnonce: _wpnonce,
			user_id: user_id,
			data_name: data_name
		};

		digi_user_detail.$( '.user-detail .wp-digi-list' ).addClass( 'wp-digi-bloc-loading' );

		digi_user_detail.$.post( window.ajaxurl, data, function( response ) {
			digi_user_detail.$( '.user-detail .wp-digi-list' ).replaceWith( response.data.template );
		});
	}
};

window.eoxiaJS.digirisk.workunit = {};

window.eoxiaJS.digirisk.workunit.init = function() {
	window.eoxiaJS.digirisk.workunit.event();
};

/**
 * Initialise deux évènements:
 * -Lorque qu'une touche du clavier est remontée dans le champ de texte pour ajouter une nouvelle unité de travail.
 * -Lorsque qu'un clic est effectué sur unité de travail dans le menu de navigation.
 *
 * @return {void}
 *
 * @since 0.1
 * @version 6.2.4.0
 */
window.eoxiaJS.digirisk.workunit.event = function() {
	jQuery( document ).on( 'keyup', '.digirisk-wrap .workunit-add input[type="text"]', window.eoxiaJS.digirisk.workunit.keyEnterSendForm );
	jQuery( document ).on( 'click', '.digirisk-wrap .workunit-list span[data-action="load_society"]', window.eoxiaJS.digirisk.workunit.setActive );
};

/**
 * Cette méthode clic sur le bouton "add" lorsque la touche "entrée" est remontée afin d'ajouter une unité de travail.
 *
 * @param  {KeyboardEvent} event Contient toutes les valeurs du clavier lorsqu'une touche remonte.
 * @return void
 *
 * @since 0.1
 * @version 6.2.4.0
 */
window.eoxiaJS.digirisk.workunit.keyEnterSendForm = function( event ) {
	if ( 13 === event.keyCode ) {
		jQuery( '.digirisk-wrap .workunit-add .add' ).click();
	}
};

/**
 * Le callback en cas de réussite à la requête Ajax "save_workunit".
 * Remplace le template de l'application en entier et clique sur la nouvelle unité de travail pour la charger.
 *
 * @param  {HTMLDivElement} triggeredElement L'élement HTML déclenchant la requête Ajax.
 * @param  {Object}         response         Les données renvoyées par la requête Ajax.
 * @return {void}
 *
 * @since 0.1
 * @version 6.2.4.0
 */
window.eoxiaJS.digirisk.workunit.saved_workunit_success = function( triggeredElement, response ) {
	jQuery( '.digirisk-wrap' ).replaceWith( response.data.template );
	jQuery( '.workunit-list .unit-header[data-workunit-id="' + response.data.id + '"] span[data-action="load_society"]' ).click();
};

/**
 * Ajoutes la classe "active" à l'unité de travail cliquée.
 *
 * @param {ClickEvent} event Contient toutes les valeurs de la souris lors du clic sur l'élément.
 *
 * @since 0.1
 * @version 6.2.4.0
 */
window.eoxiaJS.digirisk.workunit.setActive = function( event ) {
	jQuery( '.digirisk-wrap .workunit-list li.active' ).removeClass( 'active' );
	jQuery( this ).closest( 'li' ).addClass( 'active' );
};

window.eoxiaJS.digirisk.ZIP = {};

window.eoxiaJS.digirisk.ZIP.init = function() {
	window.eoxiaJS.digirisk.ZIP.event();
};

window.eoxiaJS.digirisk.ZIP.event = function() {
};
